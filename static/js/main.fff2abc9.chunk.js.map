{"version":3,"sources":["components/page/ActiveAddresses.js","components/page/Unav.js","components/page/EventStream.js","components/marketplace/ViewMarketplace.js","components/marketplace/MarketplaceContainer.js","components/marketplace/MarketplaceListContainer.js","components/marketplace/Shop.js","components/marketplace/ShopContainer.js","components/marketplace/ShopListContainer.js","components/shop/ListShops.js","components/shop/AddShop.js","components/shop/ManageShops.js","components/shop/ListProducts.js","components/shop/ManageProducts.js","components/shop/ShopManagement.js","components/admin/AddAdmins.js","components/admin/ListAdmins.js","components/admin/ManageAdmins.js","components/admin/AddShopOwners.js","components/admin/ListShopOwners.js","components/admin/ManageShopOwners.js","components/admin/DangerZone.js","components/admin/Administration.js","components/page/NotFound.js","App.js","serviceWorker.js","index.js","components/shop/AddProduct.js"],"names":["ActiveAddresses","network","_this$props","this","props","drizzle","drizzleState","contract","contracts","Marketplace","networkID","web3","networkId","ActiveUser","accounts","ActiveContract","address","ActiveUserLink","react_default","a","createElement","target","href","ActiveContractLink","Table","size","style","marginBottom","bordered","responsive","Component","Unav","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isAdmin","isShopOwner","account","methods","cacheCall","from","setState","isAnAdmin","isAShopOwner","links","link","Link","to","className","key","Boolean","value","push","navlist","map","NavItem","Row","Col","Navbar","color","dark","expand","NavbarBrand","Nav","navbar","ActiveAddresses_ActiveAddresses","EventStream","event","_this2","events","allEvents","err","result","console","log","name","txHash","block","output","transactionHash","blockNumber","UncontrolledAlert","ViewMarketplace","shops","length","shopList","shop","index","pathname","category","striped","MarketplaceContainer","itemKeys","shopKeys","i","shopCount","itemCount","id","items","forEach","item","ViewMarketplace_ViewMarketplace","MarketplaceListContainer","shopCountKey","itemCountKey","isShop","match","path","sc","getShopCount","ic","getItemCount","MarketplaceContainer_MarketplaceContainer","Shop","getTxStatus","_this$props$drizzleSt","transactions","transactionStack","stackId","concat","status","stackID","txAlert","sku","price","buy","_sku","_price","parseInt","cacheSend","receive","_this$props2","shopID","params","myShop","undefined","myItems","buyer","itemList","Card","CardImg","top","src","ipfsImageHash","CardBody","CardTitle","CardSubtitle","description","CardText","utils","fromWei","Button","onClick","handleBuy","bind","disabled","handleReceive","CardColumns","ShopContainer","Shop_Shop","ShopListContainer","ShopContainer_ShopContainer","ListShops","ids","_shopID","setValue","balance","handleWithdrawal","AddShop","handleSubmit","assertThisInitialized","onDismiss","e","preventDefault","shop_name","setValues","shop_cat","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","placeholder","Alert","isOpen","toggle","ManageShops","refresh","ManageShopsCallback","getShopIDsByOwner","ListShops_ListShops","AddShop_AddShop","callback","ListProducts","itemID","ship","archive","_this$props3","rel","height","width","alt","handleShip","handleArchive","ManageProducts","itemsKey","getItemsBySeller","ListProducts_ListProducts","AddProduct","Administration","ShopOwner","ManageShops_ManageShops","ManageProducts_ManageProducts","AddAdmins","admin_address","ListAdmins","admins","removeAdmin","admns","listAdmins","l","adminList","admin","ManageAdmins","ListAdmins_ListAdmins","AddAdmins_AddAdmins","AddShopOwners","shopowner_address","ListShopOwners","shopowners","shopownrs","listShopOwners","ownerList","owner","ManageShopOwners","ListShopOwners_ListShopOwners","admin_AddShopOwners","DangerZone","circuitState","toggleCircuit","destroyContract","circuit","getCircuitState","circuitstate","ownr","isTheOwner","destroyBttn","Admin","ManageAdmins_ManageAdmins","ManageShopOwners_ManageShopOwners","admin_DangerZone","NotFound","App","loading","unsubscribe","store","subscribe","getState","drizzleStatus","initialized","_this3","Container","Unav_Unav","EventStream_EventStream","Switch","Route","exact","render","MarketplaceListContainer_MarketplaceListContainer","assign","ShopManagement_Administration","Administration_Administration","ShopListContainer_ShopListContainer","component","window","location","hostname","options","drizzleStore","generateStore","Drizzle","ReactDOM","HashRouter","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","_home_mark_Projects_Ethereum_mdt_final_project_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mark_Projects_Ethereum_mdt_final_project_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_mark_Projects_Ethereum_mdt_final_project_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","captureFile","stopPropagation","file","files","reader","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","_ref","_home_mark_Projects_Ethereum_mdt_final_project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mark_Projects_Ethereum_mdt_final_project_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","buffer","wrap","_context","prev","next","Buffer","sent","stop","_x","apply","arguments","_ref2","_callee2","IPFS","ipfs","_context2","prod_name","prod_desc","prod_price","abrupt","require","protocol","add","ipfsHash","hash","_x2","_home_mark_Projects_Ethereum_mdt_final_project_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","desc","toWei","react__WEBPACK_IMPORTED_MODULE_8___default","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","onChange","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__"],"mappings":"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","file":"static/js/main.fff2abc9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Table } from 'reactstrap';\n\nexport default class ActiveAddresses extends Component{\n\n    render() {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n\n        const networkID = drizzleState.web3.networkId;\n        const ActiveUser = drizzleState.accounts[0];\n        const ActiveContract = contract.address;\n\n        let network;\n\n        switch(networkID){\n            case 3: \n                network = 'Ropsten';\n                break;\n            case 4: \n                network = 'Rinkeby';\n                break;\n\n            default:\n                network = '';\n        }\n\n        const tableStyle = {\n            marginBottom: 40\n        }\n\n        const ActiveUserLink = <a target=\"_blank\" href={'https://'+ network +'.etherscan.io/address/' + ActiveUser}>{ActiveUser}</a>;\n        const ActiveContractLink = <a target=\"_blank\" href={'https://'+ network +'.etherscan.io/address/' + ActiveContract}>{ActiveContract}</a>;\n\n        return(\n            <Table size=\"sm\" style={tableStyle} bordered responsive>\n                <thead><tr><th>Network</th><th>Active External Account</th><th>Active Contract Account</th></tr></thead>\n                <tbody><tr>\n                    <td>{(networkID === 3 || networkID === 4) ? network : 'Development'}</td>\n                    <td>{(networkID === 3 || networkID === 4) ? ActiveUserLink : ActiveUser}</td>\n                    <td>{(networkID === 3 || networkID === 4) ? ActiveContractLink : ActiveContract}</td>\n                </tr></tbody>\n            </Table>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, NavbarBrand, Nav, NavItem, Row, Col } from 'reactstrap'; \nimport ActiveAddresses from \"./ActiveAddresses.js\"\n\nexport default class Unav extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { isAdmin: null, isShopOwner: null };\n    }\n\n    componentDidMount() {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n\n        //console.log(contract);\n    \n        // let drizzle know we want to watch the `get` method\n        const isAdmin = contract.methods[\"isAnAdmin\"].cacheCall({from: account});\n        const isShopOwner = contract.methods[\"isAShopOwner\"].cacheCall({from: account});\n    \n        // save the `dataKey` to local component state for later reference\n        this.setState({ isAdmin, isShopOwner });\n    }\n\n    render() {\n        // get the contract state from drizzleState\n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        // using the saved `dataKey`, get the variable we're interested in\n        const isAdmin = Marketplace.isAnAdmin[this.state.isAdmin];\n        const isShopOwner = Marketplace.isAShopOwner[this.state.isShopOwner];\n\n        const links = [{link: <Link to=\"/\" className=\"nav-link\">Marketplace</Link>, key:'marketplace'}];\n        if(Boolean(isShopOwner && isShopOwner.value)) links.push({link: <Link to=\"/manage-shops\" className=\"nav-link\">Manage Shops</Link>, key:\"manageshops\"});\n        if(Boolean(isAdmin && isAdmin.value)) links.push({link:<Link to=\"/admin\" className=\"nav-link\">Admin</Link>, key:\"admin\"});\n\n        const navlist = links.map((link) => \n            <NavItem key={link.key}>{link.link}</NavItem>\n        );\n\n        return(\n            <Row>\n                <Col>\n                    <Navbar color=\"dark\" dark expand=\"lg\">\n                        <NavbarBrand className=\"logo\" href=\"./#/\">Marketplace Dapp Demo</NavbarBrand>\n                        <Nav className=\"ml-auto\" navbar>\n                            {navlist}\n                        </Nav>\n                    </Navbar>\n                    <ActiveAddresses drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} />\n                </Col>\n            </Row>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {UncontrolledAlert} from 'reactstrap';\n\nexport default class EventStream extends Component{\n    constructor(props){\n        super(props);\n        this.state = { \n            event: null,\n\n        };\n    }\n\n    componentDidMount(){\n        const { drizzle } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n\n        contract.events.allEvents((err,result)=>{\n            if(err){\n                console.log(err);\n            } else {\n                const event = result;\n                this.setState({event});\n            }\n        });\n\n    }\n\n    render() {\n        let event = {\n            name: null,\n            txHash: null,\n            block: null\n        }\n\n        let output = '';\n\n        if(this.state.event !== null) {\n            event.name = this.state.event.event;\n            event.txHash = this.state.event.transactionHash;\n            event.block = this.state.event.blockNumber;\n\n            output = <UncontrolledAlert color=\"info\">\n                <em>Last Event</em>: {event.name}, Tx: <a href={'https://ropsten.etherscan.io/tx/' + event.txHash}>{event.txHash}</a>, BlockNumber: {event.block}</UncontrolledAlert>\n        }\n            \n        return(\n            output\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table } from 'reactstrap';\n\nexport default class ViewMarketplace extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { \n        };\n\n         //console.log('ViewMarketplace');\n         //console.log(this.props);\n    }\n\n    render() {  \n        //console.log(this.props);\n            \n            if(this.props.shops.length > 0 ){\n\n                const shopList = this.props.shops.map((shop, index) => \n                    <tr key={index}>\n                        <td><Link to={{ pathname: '/shops/' + index }} >{shop.name}</Link></td>\n                        <td>{shop.category}</td>\n                    </tr>\n                )\n                \n                return (\n                    \n                    <div>\n                        <h1>The Shops</h1>\n                    \n                        <Table size=\"sm\" striped>\n                            <thead><tr>\n                                <th>Name</th>\n                                <th>Category</th>\n                            </tr></thead>\n                            <tbody>{shopList}</tbody>\n                        </Table>\n                        <div>\n                            <p>*Email me at <a href=\"mailto:thomesoni@gmail.com\">thomesoni@gmail.com</a> to request Shop Owner access. Please include a Ropsten external address in your request.</p>\n                        </div>\n                    </div>\n                )\n            }    \n\n        return(\n            <div><p>You haven't opened any shops yet.</p></div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport ViewMarketplace from \"./ViewMarketplace\";\n\nexport default class MarketplaceContainer extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            itemKeys: null,\n            shopKeys: null\n        }\n\n        //console.log(\"MarketplaceContainer\");\n        //console.log(this.props);\n    }\n\n    componentDidMount(){\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n        \n        // shops\n        const shopKeys = [];\n        for( let i = 0; i<this.props.shopCount; i++){\n            shopKeys.push(contract.methods['shops'].cacheCall(i,{from: account}));\n        }\n        this.setState({shopKeys});\n\n        const itemKeys = [];\n        for( let i = 0; i<this.props.itemCount; i++){\n            itemKeys.push(contract.methods['items'].cacheCall(i,{from: account}));\n        }\n        this.setState({itemKeys});\n    }\n\n    render() {\n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        if(this.state.shopKeys === null || this.state.itemKeys === null){\n            //console.log('loading..');\n            return (\n                <div>Loading...</div>\n            );\n\n        } else {\n            if(!this.state.shopKeys.length){\n                return (\n                    <div id=\"marketplace\">\n                    <h1>Welcome</h1>\n                    <p>Welcome to the Marketplace Demo Dapp! To get started, follow these steps:</p>\n\n                    <h2>I. Add a Shop Owner</h2>\n                    <ol>\n                        <li>Make sure you're logged into MetaMask as Account 1</li>\n                        <li>Click the 'Admin' link to the top left of the header</li>\n                        <li>Look to the bottom of the Admin page for the 'Add ShopOwner' section</li>\n                        <li>In MetaMask, copy another account address, and then paste it into the 'Enter Account Address' field</li>\n                        <li>Click the 'Add' Button</li>\n                        <li>MetaMask will prompt you to confirm the transaction, confirm it</li>\n                    </ol>\n\n                    <h2>II. Open a Shop</h2>\n                    <ol>\n                        <li>In MetaMask, switch to the account you added to the ShopOwners list in step I</li>\n                        <li>Reload the app to load the new account by clicking on the 'Marketplace Dapp Demo' link in the header</li>\n                        <li>Check the Active External Account field in the header to make sure you're logged in with the ShopOwner account</li>\n                        <li>Click the 'Manage Shops' link to the top left of the header</li>\n                        <li>In the middle of the Manage Shops page find the 'Open Shop' section</li>\n                        <li>Type in your shop name and category and click 'Create'</li>\n                        <li>MetaMask will prompt you to confirm the transaction, confirm it</li>\n                        <li>Click the 'Marketplace' link in the header to check if your shop is now listed</li>\n                    </ol>\n                    <h2>III. Add Some Products</h2>\n                    <ol>\n                        <li>While still logged in as ShopOwner, click again on the 'Manage Shops' link in the header</li>\n                        <li>Toward the bottom of the Manage Shops page find the 'Add New Product' section</li>\n                        <li>Type in the shop id, name, description, price and choose an image to upload - click 'Create'</li>\n                        <li>MetaMask will prompt you to confirm the transaction, confirm it</li>\n                        <li>Click the 'Marketplace' link in the header and click into your shop</li>\n                        <li>Your product should now be listed</li>\n                    </ol>\n\n                    <h2>IV. Tell Your Friends!</h2>\n                                    \n                    </div>\n                )\n            } else {\n\n                const items = [];\n                const shops = [];\n            \n                this.state.itemKeys.forEach((key)=>{\n                    let item = Marketplace.items[key]; \n                    //console.log(item && item.value);      \n                    items.push(item && item.value);\n                });\n        \n                this.state.shopKeys.forEach((key)=>{\n                    let shop = Marketplace.shops[key];\n                    //console.log(shop && shop.value);       \n                    shops.push(shop && shop.value);\n                });\n        \n                try {\n        \n                    if(!Boolean(shops[shops.length-1]) || !Boolean(shops[shops.length-1])){\n                        return (\n                            <div>Loading...</div>\n                        )\n                    } else {\n                        return (\n                            <ViewMarketplace \n                                drizzle={this.props.drizzle} \n                                drizzleState={this.props.drizzleState} \n                                shops={shops}\n                                items={items}\n                            />\n                        )\n                    }\n        \n                } catch(err){\n                    console.log(err);\n                }\n            }\n        }\n    }\n}","import React, { Component } from 'react';\nimport MarketplaceContainer from \"./MarketplaceContainer\";\n\nexport default class MarketplaceListContainer extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = { \n            shopCountKey: null,\n            itemCountKey: null,\n            isShop: null,\n            match: null\n        };\n\n        //console.log(\"MarketplaceListContainer\");\n        //console.log(this.props);\n    }\n\n    componentDidMount() {\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n\n        const shopCountKey = contract.methods[\"getShopCount\"].cacheCall({from: account});\n        this.setState({shopCountKey});\n        \n        const itemCountKey = contract.methods[\"getItemCount\"].cacheCall({from: account});\n        this.setState({itemCountKey});\n\n        if(this.props.match.path === \"/shops/:id\"){\n            this.setState({isShop: true});\n        } else {\n            this.setState({isShop: false});\n        }\n\n        this.setState({match: this.props.match});\n    }\n    \n    render() {\n        //console.log(this.state);\n        const { Marketplace } = this.props.drizzleState.contracts;\n        \n        if(this.state.shopCountKey === null || this.state.itemCountKey === null){\n            return (\n                <div>Loading...</div>\n            )\n        } else {\n            const sc = Marketplace.getShopCount[this.state.shopCountKey];\n            const ic = Marketplace.getItemCount[this.state.itemCountKey];\n\n            const shopCount = (sc && sc.value);\n            const itemCount = (ic && ic.value);\n\n            if((!Boolean(shopCount)) || (!Boolean(itemCount)) ){\n                return(\n                    <div>Loading...</div>\n                )\n            } else {\n\n                return(\n                    <MarketplaceContainer \n                        drizzle={this.props.drizzle} \n                        drizzleState={this.props.drizzleState} \n                        shopCount= { shopCount }\n                        itemCount={ itemCount }\n                        isShop={this.state.isShop} \n                        match={this.state.match}\n                    />\n                )\n            }\n        }\n    }\n}\n ","import React, { Component } from 'react';\nimport { CardColumns, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport {Link} from 'react-router-dom';\n\nexport default class Shop extends Component{\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            stackID: null,\n            txAlert: false\n        }\n    \n        //console.log('Shop');\n        //console.log(this.props);\n    }\n\n    onDismiss(){\n        this.setState({txAlert: false});\n    }\n\n    handleBuy(sku, price) {\n        //console.log(price);\n        this.buy(sku, price);\n    };\n\n    buy(_sku, _price) {\n        const sku = parseInt(_sku);\n        const price = parseInt(_price);\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"buyItem\"].cacheSend(sku, {\n          from: drizzleState.accounts[0], value: price\n        });\n    \n        // save the `stackId` for later reference\n        this.setState({ stackId });\n        this.setState({txAlert: true});\n    };\n\n    handleReceive(sku) {\n        //console.log(sku);\n        this.receive(sku);\n    };\n\n    receive(_sku) {\n        const sku = parseInt(_sku);\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"receiveItem\"].cacheSend(sku, {\n          from: drizzleState.accounts[0]\n        });\n    \n        // save the `stackId` for later reference\n        this.setState({ stackId });\n        this.setState({txAlert: true});\n    };\n    \n    getTxStatus = () => {\n        // get the transaction states from the drizzle state\n        const { transactions, transactionStack } = this.props.drizzleState;\n    \n        // get the transaction hash using our saved `stackId`\n        const txHash = transactionStack[this.state.stackId];\n    \n        // if transaction hash does not exist, don't display anything\n        if (!txHash) {\n            return 'Connecting...';\n        }\n\n        // otherwise, return the transaction status\n        return `Transaction status: ${transactions[txHash].status}`;\n      };\n   \n    render() {\n        const account = this.props.drizzleState.accounts[0];\n\n        const shopID = this.props.match.params.id;\n        const myShop = this.props.shops[shopID];\n\n        if(this.props.items[this.props.items.length-1] !== undefined ){\n\n            // filter items for only those beloning to this shop\n            let myItems = [];\n            for(let i=0; i<this.props.items.length; i++){\n                \n                // make sure it belongs to this store\n                if(this.props.items[i].shopID === shopID){\n                    // and that it's still for sale\n                    if(this.props.items[i].state === '0') {\n                        myItems.push(this.props.items[i]);\n                    } else {\n                        // or that it ws ordered by this user\n                        if(this.props.items[i].buyer === account) {\n                            // and is awaiting shipment or was shipped but not received\n                            if(this.props.items[i].state === '1' || this.props.items[i].state === '2'){\n                                myItems.push(this.props.items[i]);\n                            }  \n                        }\n                    }\n                    \n                }\n            }\n\n            // any shops in my store?\n            if(myItems.length){\n                \n                const itemList = myItems.map((item, index) => {\n                    return <Card key={index}>\n                                <CardImg top src={'https://ipfs.io/ipfs/' +  item.ipfsImageHash} />\n                                <CardBody>\n                                    <CardTitle>{item.name}</CardTitle>\n                                    <CardSubtitle>{item.description}</CardSubtitle>\n                                    <CardText>Price: {this.props.drizzle.web3.utils.fromWei(item.price,'finney')} finney</CardText>\n                                    \n                                    {item.state === '0' ? (\n                                        <Button onClick={this.handleBuy.bind(this, item.sku, item.price)} >Buy Now</Button> ) : (\n                                            item.state === '1' && item.buyer === account ? (\n                                                <Button disabled>Ordered</Button> \n                                            ) : (\n                                                item.state === '2' && item.buyer === account ? (\n                                                    <Button onClick={this.handleReceive.bind(this, item.sku)} >Receive</Button>\n                                                ) : (\n                                                <Button disabled>Sold!</Button> \n                                                )\n                                            )\n                                    )}\n                                </CardBody>\n                            </Card>\n                });\n            \n                return (\n                    <div>\n                        <h1>{myShop.name}</h1>\n                \n                        <CardColumns>\n                            {itemList}\n                        </CardColumns>\n                                          \n                        <div className=\"shop-footer\">\n                            <Link to=\"/\">&lt;&lt; Back to Shops</Link>\n                        </div>\n                    </div>\n                )\n\n            } else {\n                return (\n                    <div>\n                        <h2>{myShop.name}</h2>\n                \n                        <div>{myShop.name} doesn't have any items posted for sale.</div>\n                    \n                        <Link to=\"/\">&lt;&lt; Back to Shops</Link>\n\n                    </div>\n                )\n            }\n\n        } else {\n            return (\n                <div>\n                    <h2>{myShop.name}</h2>\n                    <div>No items for sale!</div>\n\n                    <Link to=\"/\">&lt;&lt; Back to Shops</Link>\n                </div>\n            )\n        }    \n    }\n}\n","import React, { Component } from 'react';\nimport Shop from \"./Shop\";\n\nexport default class ShopContainer extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            itemKeys: null,\n            shopKeys: null\n        }\n\n        //console.log(\"ShopContainer\");\n        //console.log(this.props);\n    }\n\n    componentDidMount(){\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n        \n        // shops\n        const shopKeys = [];\n        for( let i = 0; i<this.props.shopCount; i++){\n            shopKeys.push(contract.methods['shops'].cacheCall(i,{from: account}));\n        }\n        this.setState({shopKeys});\n\n        const itemKeys = [];\n        for( let i = 0; i<this.props.itemCount; i++){\n            itemKeys.push(contract.methods['items'].cacheCall(i,{from: account}));\n        }\n        this.setState({itemKeys});\n    }\n\n    render() {\n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        if(this.state.shopKeys === null || this.state.itemKeys === null){\n            //console.log('loading..');\n            return (\n                <div>Loading...</div>\n            );\n\n        } else {\n            if(!this.state.shopKeys.length){\n                return (\n                    <div id=\"marketplace\">\n                    <h1>Welcome</h1>\n                    <p>Welcome to the Marketplace Demo Dapp! To get started, follow these steps:</p>\n\n                    <h2>1) Add a Shop Owner</h2>\n\n                    <h2>2) Open a Shop</h2>\n\n                    <h2>3) Add Some Products</h2>\n\n                    <h2>4) Tell Your Friends!</h2>\n                    </div>\n                )\n            } else {\n\n                const items = [];\n                const shops = [];\n            \n                this.state.itemKeys.forEach((key)=>{\n                    let item = Marketplace.items[key]; \n                    //console.log(item && item.value);      \n                    items.push(item && item.value);\n                });\n        \n                this.state.shopKeys.forEach((key)=>{\n                    let shop = Marketplace.shops[key];\n                    //console.log(shop && shop.value);       \n                    shops.push(shop && shop.value);\n                });\n        \n                try {\n        \n                    if(!Boolean(shops[shops.length-1]) || !Boolean(shops[shops.length-1])){\n                        return (\n                            <div>Loading...</div>\n                        )\n                    } else {\n                        if(this.props.isShop){\n                            return (\n                                <Shop \n                                    drizzle={this.props.drizzle} \n                                    drizzleState={this.props.drizzleState} \n                                    shops={shops} \n                                    items={items}\n                                    match={this.props.match} \n                                />\n                            )\n\n                        } else  {\n                            return (\n                                <div>Shop not found.</div>\n                            )\n                        }\n                    }\n        \n                } catch(err){\n                    console.log(err);\n                    \n                }\n\n            }\n        }\n \n    }\n}\n","import React, { Component } from 'react';\nimport ShopContainer from \"./ShopContainer\";\n\nexport default class ShopListContainer extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = { \n            shopCountKey: null,\n            itemCountKey: null,\n            isShop: null,\n            match: null\n        };\n\n        //console.log(\"shopListContainer\");\n        //console.log(this.props);\n    }\n\n    componentDidMount() {\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n\n        const shopCountKey = contract.methods[\"getShopCount\"].cacheCall({from: account});\n        this.setState({shopCountKey});\n        \n        const itemCountKey = contract.methods[\"getItemCount\"].cacheCall({from: account});\n        this.setState({itemCountKey});\n\n        if(this.props.match.path === \"/shops/:id\"){\n            this.setState({isShop: true});\n        } else {\n            this.setState({isShop: false});\n        }\n\n        this.setState({match: this.props.match});\n    }\n    \n    render() {\n        //console.log(this.state);\n        const { Marketplace } = this.props.drizzleState.contracts;\n        \n        if(this.state.shopCountKey === null || this.state.itemCountKey === null){\n            return (\n                <div>Loading...</div>\n            )\n        } else {\n            const sc = Marketplace.getShopCount[this.state.shopCountKey];\n            const ic = Marketplace.getItemCount[this.state.itemCountKey];\n\n            const shopCount = (sc && sc.value);\n            const itemCount = (ic && ic.value);\n\n            if((!Boolean(shopCount)) || (!Boolean(itemCount)) ){\n                return(\n                    <div>Loading...</div>\n                )\n            } else {\n\n                return(\n                    <ShopContainer \n                        drizzle={this.props.drizzle} \n                        drizzleState={this.props.drizzleState} \n                        shopCount= { shopCount }\n                        itemCount={ itemCount }\n                        isShop={this.state.isShop} \n                        match={this.state.match}\n                    />\n                )\n            }\n        }\n    }\n}","import React, { Component } from 'react';\nimport { Table, Button } from 'reactstrap';\n\nexport default class ListShops extends Component{\n\n    constructor(props){\n\n        super(props);\n\n        this.state = { \n            shops: [],\n         };\n    }\n    \n    componentDidMount() {\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n\n        let shops = [];\n        \n        this.props.ids.value.forEach((shopID)=>{\n            shops.push(contract.methods[\"shops\"].cacheCall(shopID, {from: account}));\n        }); \n\n        this.setState({shops});\n    }\n\n    handleWithdrawal(_shopID){\n        this.setValue(_shopID);\n    }\n\n    setValue(_shopID) {\n        const shopID = parseInt(_shopID);\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"withdrawFunds\"].cacheSend(shopID, {\n          from: drizzleState.accounts[0]\n        });\n    \n        // save the `stackId` for later reference\n        this.setState({ stackId });\n        this.setState({txAlert: true});\n    };\n\n    render() {\n        \n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        let shops = [];\n        this.state.shops.forEach((key, index)=>{\n            let shop = Marketplace.shops[key];       \n            shops.push(shop && shop.value);\n        });\n    \n        try{\n            \n            if(shops.length >0 ){\n\n                const shopList = shops.map((shop, index) =>\n                    <tr key={index}>\n                        <td>{shop.shopID}</td>\n                        <td>{shop.name}</td>\n                        <td>{shop.category}</td>\n                        <td>{this.props.drizzle.web3.utils.fromWei(shop.balance, 'finney')} </td>\n                        {shop.balance === '0' ? (\n                            <td><Button disabled>Withdraw Balance</Button></td>\n                        ) : (\n                            <td><Button onClick={this.handleWithdrawal.bind(this, index)}>Withdraw Balance</Button></td>\n                        )}\n                        \n                    </tr>\n                )\n            \n                return (\n                    <div>\n                        <h3>My Shops</h3>\n                        <Table size=\"sm\" striped>\n                            <thead><tr>\n                                <th>ShopID</th>\n                                <th>Name</th>\n                                <th>Category</th>\n                                <th>Balance (finney)</th>\n                                <th>Action</th>\n                            </tr></thead>\n                            <tbody>{shopList}</tbody>\n                        </Table>\n                    </div>\n                )\n            }    \n\n        } catch(err){\n           //console.log(err);\n        }\n    \n        return(\n            <div><p>You haven't opened any shops yet.</p></div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Input, Label, Alert} from 'reactstrap';\n\nexport default class AddShop extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { \n            stackId: null, \n            txAlert: false,\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onDismiss = this.onDismiss.bind(this);\n    }\n\n\n    onDismiss(){\n        this.setState({txAlert: false});\n    }\n    \n    handleSubmit(e) {\n        e.preventDefault(); \n        if(e.target.shop_name.value === '') return;\n        this.setValues(e.target.shop_name.value, e.target.shop_cat.value);\n        e.target.shop_name.value = '';\n        e.target.shop_cat.value = '';\n    };\n    \n    setValues(name, category) {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n    \n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"createShop\"].cacheSend(name, category, {\n          from: account\n        });\n    \n        // save the `stackId` for later reference\n        this.setState({ stackId });\n        this.setState({txAlert: true});\n    };\n    \n    getTxStatus = () => {\n        // get the transaction states from the drizzle state\n        const { transactions, transactionStack } = this.props.drizzleState;\n    \n        // get the transaction hash using our saved `stackId`\n        const txHash = transactionStack[this.state.stackId];\n    \n        // if transaction hash does not exist, don't display anything\n        if (!txHash) {\n\n            return 'Connecting...';\n        }\n\n        // otherwise, return the transaction status\n        return `Transaction status: ${transactions[txHash].status}`;\n    };\n\n    render() {\n\n        return(\n \n            <div>\n                <h3>Open New Shop</h3>\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label htmlFor=\"shop_name\">Shop Name</Label>\n                        <Input id=\"shop_name\" name=\"shop_name\" type=\"text\" placeholder=\"My New Shop\" />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor=\"shop_cat\">Shop Category</Label>\n                        <Input id=\"shop_cat\" name=\"shop_cat\" type=\"text\" placeholder=\"My Category\" />\n                    </FormGroup>\n                    \n                    <FormGroup>\n                        <Button>Create</Button>\n                    </FormGroup>\n                    \n                    <FormGroup>\n                        <Alert color=\"info\" isOpen={this.state.txAlert} toggle={this.onDismiss}>{this.getTxStatus()}</Alert>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport ListShops from \"./ListShops\";\nimport AddShop from \"./AddShop\";\nimport {Row, Col} from 'reactstrap';\n\nexport default class ManageShops extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = { \n            shopKeys: null,\n            refresh: false\n        };\n\n        this.ManageShopsCallback = this.ManageShopsCallback.bind(this);\n    }\n\n    componentDidMount() {\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n\n        const shopKeys = contract.methods[\"getShopIDsByOwner\"].cacheCall(account, {from: account});\n\n        this.setState({ shopKeys});\n    }\n\n    ManageShopsCallback(){\n        //this.setState({ refresh: !this.state.refresh });\n    }\n    \n    render() {\n        if(this.state.shopKeys === null){\n            return (\n                <div>Loading shopKeys...</div>\n            )\n        \n        } else {\n            const { Marketplace } = this.props.drizzleState.contracts;\n            const ids = Marketplace.getShopIDsByOwner[this.state.shopKeys];\n\n            try {\n                if(!Boolean(ids && ids.value)) {\n                    return (\n                        <div>Loading...</div>\n                    )\n                } else {\n                       \n                    return (\n                            <Row>\n                                <Col>\n                                    <Row>\n                                        <Col>\n                                            <ListShops \n                                                drizzle={this.props.drizzle} \n                                                drizzleState={this.props.drizzleState} \n                                                ids={ids} \n                                            />\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <AddShop \n                                                drizzle={this.props.drizzle} \n                                                drizzleState={this.props.drizzleState} \n                                                callback={this.ManageShopsCallback}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                    )\n                }\n\n            } catch (err) {\n                console.log(err);\n            }\n        }         \n    }\n}\n\n ","import React, { Component } from 'react';\nimport { Button, Table } from 'reactstrap';\n\nexport default class ListProducts extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { \n            itemKeys: []\n        };\n    }\n    \n    componentDidMount() {\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n\n        let items = [];\n        \n        this.props.ids.value.forEach((itemID)=>{\n            items.push(contract.methods[\"items\"].cacheCall(itemID, {from: account}));\n        }); \n\n        this.setState({itemKeys: items});\n    }\n\n    handleShip(sku) {\n        this.ship(sku);\n    };\n\n    ship(_sku) {\n        const sku = parseInt(_sku);\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"shipItem\"].cacheSend(sku, {\n          from: drizzleState.accounts[0]\n        });\n    \n        // save the `stackId` for later reference\n        this.setState({ stackId });\n        this.setState({txAlert: true});\n    };\n\n    handleArchive(sku) {\n        this.archive(sku);\n    };\n\n    archive(_sku) {\n        const sku = parseInt(_sku);\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"archiveItem\"].cacheSend(sku, {\n          from: drizzleState.accounts[0]\n        });\n    \n        // save the `stackId` for later reference\n        this.setState({ stackId });\n        this.setState({txAlert: true})\n    };\n\n    render() {\n        //console.log('ListProducts');\n        const { Marketplace } = this.props.drizzleState.contracts;\n        \n        if(this.state.itemKeys === null){\n            return (\n                <div>\n                    Loading...\n                </div>\n            )\n        } else {\n            if(!this.state.itemKeys.length){\n                return (\n                    <div>\n                        No item keys!\n                    </div>\n                )\n            } else {\n\n                let items = [];\n                this.state.itemKeys.forEach((key, index)=>{\n                    let item= Marketplace.items[key];       \n                    items.push(item && item.value);\n                });\n    \n                try{\n            \n                    if(!Boolean(items[items.length-1])){\n                        return (\n                            <div>Loading...</div>\n                        )\n                    } else {\n                        const imgBaseUrl = 'https://ipfs.io/ipfs/';\n                        \n                        const itemList = items.map((item, index) =>\n                            <tr key={index}>\n                                <td>{item.shopID}</td>\n                                <td>{item.name}</td>\n                                <td>{item.sku}</td>\n                                <td>{item.description}</td>\n                                <td>\n                                    <a href={ imgBaseUrl + item.ipfsImageHash} rel=\"noopener norefferrer\" target=\"_blank\"  >\n                                        {(item.ipfsImageHash !== '') ?\n                                            <img \n                                                height=\"25\" \n                                                width=\"25\" \n                                                alt=\"product img\"\n                                                src={imgBaseUrl + item.ipfsImageHash} \n                                            />\n                                        : ''}\n                                    </a>\n                                </td>\n                                <td>{this.props.drizzle.web3.utils.fromWei(item.price,'finney')}</td>\n                                <td>{item.buyer}</td>\n                                <td>{item.state}</td>\n                                { item.state === '0' ? (\n                                        <td><Button disabled>Stocked</Button></td>\n                                    ) :\n                                        item.state === '1' ? (\n                                            <td><Button onClick={this.handleShip.bind(this,item.sku)}>Ship</Button></td>\n                                    ) : (\n                                        item.state === '2' ? (\n                                            <td><Button disabled>Shipped</Button></td>    \n                                    ) : (\n                                        item.state === '3' ? (\n                                            <td><Button onClick={this.handleArchive.bind(this,item.sku)}>Archive</Button></td>\n                                    ) : \n                                         <td><Button disabled>Archived</Button></td>\n                                    ) \n                                )}\n                                \n                            </tr>\n                        );\n            \n                        return (\n                            <div>\n                                <h3>My Products</h3>\n                                <Table size=\"sm\" striped responsive>\n                                    <thead><tr>\n                                        <th>ShopID</th>\n                                        <th>Name</th>\n                                        <th>SKU</th>\n                                        <th>Description</th>\n                                        <th>Image</th>\n                                        <th>Price (finney)</th>\n                                        <th>Buyer</th>\n                                        <th>State</th>\n                                        <th>Action</th>\n                                    </tr></thead>\n                                    <tbody>{itemList}</tbody>\n                                </Table>\n                            </div>\n                        );\n                    }    \n\n                } catch(err){\n                    console.log(err);\n                }\n            }\n        }\n    }\n}","import React, { Component } from 'react';\nimport {Row, Col} from 'reactstrap';\nimport AddProduct from './AddProduct';\nimport ListProducts from './ListProducts';\n\nexport default class ManageProducts extends Component{\n    constructor(props){\n        super(props);\n        this.state = { \n            itemsKey: null\n        };\n    }\n\n    componentDidMount() {\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n\n        const itemsKey = contract.methods[\"getItemsBySeller\"].cacheCall(account, {from: account});\n\n        this.setState({ itemsKey });\n    }\n    \n    render() {\n        //console.log(\"ManageProducts\");\n\n        if(this.state.itemsKey === null){\n            return (\n                <div>Loading items key...</div>\n            )\n        \n        } else {\n            const { Marketplace } = this.props.drizzleState.contracts;\n            const ids = Marketplace.getItemsBySeller[this.state.itemsKey];\n\n            try {\n                if(!Boolean(ids && ids.value)) {\n                    return (\n                        <div>Loading...</div>\n                    )\n                } else {\n                    //console.log(ids);\n                    return (\n                            <Row>\n                                <Col>\n                                    <Row>\n                                        <Col>\n                                            <ListProducts \n                                                drizzle={this.props.drizzle} \n                                                drizzleState={this.props.drizzleState} \n                                                ids={ids} \n                                            />\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <AddProduct \n                                                drizzle={this.props.drizzle} \n                                                drizzleState={this.props.drizzleState} \n                                            />\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                    )\n                }\n\n            } catch (err) {\n                console.log(err);\n            }\n        }         \n    }\n}","import React, { Component } from 'react';\nimport ManageShops from \"./ManageShops\";\nimport ManageProducts from \"./ManageProducts\";\nimport { Row, Col } from 'reactstrap';\n\nexport default class Administration extends Component{\n    constructor(props){\n        super(props);\n        \n        this.state = { \n            isShopOwner: null\n        };\n\n    }\n\n    componentDidMount() {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n    \n        // let drizzle know we want to watch the `get` method\n        const isShopOwner = contract.methods[\"isAShopOwner\"].cacheCall({from: account});\n    \n        // save the `dataKey` to local component state for later reference\n        this.setState({ isShopOwner });\n       \n    }\n    \n    render() {\n        // get the contract state from drizzleState\n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        // using the saved `dataKey`, get the variable we're interested in\n        const ShopOwner = Marketplace.isAShopOwner[this.state.isShopOwner];\n\n        if(Boolean(ShopOwner && ShopOwner.value)) {\n               \n        return(\n            <Row id=\"shop_management\">\n                <Col>\n \n                    <Row>\n                        <Col>\n                            <ManageShops drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} />\n                            <hr />\n                        </Col>\n                    </Row>\n                    \n                    <Row>\n                        <Col>\n                            <ManageProducts drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} />\n                            <hr />\n                        </Col>\n                    </Row>\n           \n                </Col>\n            </Row>\n        )\n        } else {\n            return(\n                <div id=\"shop_management\">\n                    <Row>\n                        <Col><p>You must have shopowner privileges to access this page. Return to <a href=\"/\">the Marketplace</a></p></Col>\n                    </Row>\n                </div>\n            )\n        }\n\n    }\n}","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Input, Label, Alert } from 'reactstrap';\n\nexport default class AddAdmins extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { stackId: null, txAlert: false };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onDismiss = this.onDismiss.bind(this);\n    }\n\n    onDismiss(){\n        this.setState({txAlert: false});\n    }\n    \n    handleSubmit(e) {\n        e.preventDefault(); \n        if(e.target.admin_address.value === '') return;\n        this.setValue(e.target.admin_address.value);\n        e.target.admin_address.value = '';\n    };\n    \n    setValue(address) {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"addAdmin\"].cacheSend(address, {\n          from: drizzleState.accounts[0]\n        });\n    \n        // save the `stackId` for later reference\n        this.setState({ stackId });\n        this.setState({txAlert: true});\n    };\n\n    getTxStatus = () => {\n        // get the transaction states from the drizzle state\n        const { transactions, transactionStack } = this.props.drizzleState;\n    \n        // get the transaction hash using our saved `stackId`\n        const txHash = transactionStack[this.state.stackId];\n    \n        // if transaction hash does not exist, don't display anything\n        if (!txHash) {\n\n            return 'Connecting...';\n        }\n\n        // otherwise, return the transaction status\n        return `Transaction status: ${transactions[txHash].status}`;\n      };\n\n    \n\n    render() {\n        return(\n            <div>\n                <h3>Add New Admin</h3>\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label htmlFor=\"address\">Enter Account Address</Label>\n                        <Input id=\"new_amdin_address\" name=\"admin_address\" type=\"text\" placeholder=\"0x000000000000000000000000000000000000000000\" />\n                    </FormGroup>\n                    \n                    <FormGroup>\n                        <Button>Add</Button>\n                    </FormGroup>\n                    \n                    <FormGroup>\n                        <Alert color=\"info\" isOpen={this.state.txAlert} toggle={this.onDismiss}>{this.getTxStatus()}</Alert>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Button, Table } from 'reactstrap';\n\nexport default class ListAdmins extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { admins: null };\n\n        this.removeAdmin = this.removeAdmin.bind(this);\n    }\n    \n    componentDidMount() {\n    \n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n    \n        // let drizzle know we want to watch the `get` method\n        const admins = contract.methods[\"listAdmins\"].cacheCall({from: account});\n    \n        // save the `dataKey` to local component state for later reference\n        this.setState({ admins });\n    }\n\n    removeAdmin(index) {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        contract.methods[\"removeAdmin\"].cacheSend(index, {\n          from: drizzleState.accounts[0]\n        });\n    \n    }\n\n    render() {\n\n        // get the contract state from drizzleState\n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        // using the saved `dataKey`, get the variable we're interested in\n        const admns = Marketplace.listAdmins[this.state.admins];\n\n        const l = (admns && admns.value);\n        try{\n           \n            if(l.length !== undefined){\n\n                const adminList = l.map((admin, index) =>\n                    <tr key={index}><td>{admin}</td><td>\n                        {\n                           (index < 1) ? <Button type=\"button\" disabled>Owner</Button>\n                                        : <Button type=\"button\" onClick={this.removeAdmin.bind(this, index)}>Remove</Button>\n                        }   \n                    </td></tr>\n                )\n            \n                return (\n                    <div>\n                        <h3>Admin Accounts</h3>\n                        <Table size=\"sm\" striped responsive>\n                            <thead><tr><th>Account Address</th><th>Action</th></tr></thead>\n                            <tbody>{adminList}</tbody>\n                        </Table>\n                    </div>\n                )\n            }    \n\n        } catch(err){\n           \n        }\n\n        return(\n            <div><p>No admins.</p></div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport AddAdmins from './AddAdmins';\nimport ListAdmins from './ListAdmins';\n\nexport default class ManageAdmins extends Component{\n    constructor(props){\n        super(props);\n        this.state = { isAdmin: null, isShopOwner: null };\n    }\n    \n    render() {\n\n        return(\n            <Row>\n                <Col>\n                    <Row>\n                        <Col><ListAdmins drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} /></Col>\n                    </Row>\n\n                    <Row>\n                        <Col><AddAdmins drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} /></Col>\n                    </Row>\n                    <hr />\n                </Col>\n            </Row>\n        )\n    }\n}\n \n","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Input, Label, Alert } from 'reactstrap';\n\nclass AddShopOwners extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { stackId: null, txAlert: false };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onDismiss = this.onDismiss.bind(this);\n    }\n\n    onDismiss(){\n        this.setState({txAlert: false});\n    }\n    \n    handleSubmit(e) {\n        e.preventDefault(); \n        if(e.target.shopowner_address.value === '') return;\n        this.setValue(e.target.shopowner_address.value);\n        e.target.shopowner_address.value = '';\n    };\n    \n    setValue(address) {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"addShopOwner\"].cacheSend(address, {\n          from: drizzleState.accounts[0]\n        });\n    \n        // save the `stackId` for later reference\n        this.setState({ stackId });\n        this.setState({txAlert: true});\n    };\n    \n    getTxStatus = () => {\n        // get the transaction states from the drizzle state\n        const { transactions, transactionStack } = this.props.drizzleState;\n    \n        // get the transaction hash using our saved `stackId`\n        const txHash = transactionStack[this.state.stackId];\n    \n        // if transaction hash does not exist, don't display anything\n        if (!txHash) return \"Connecting...\";\n    \n        // otherwise, return the transaction status\n        return `Transaction status: ${transactions[txHash].status}`;\n      };\n\n    render() {\n        return(\n            <div>\n                <h3>Add New Shop Owner</h3>\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label htmlFor=\"address\">Enter Account Address</Label>\n                        <Input id=\"new_shopowner_address\" name=\"shopowner_address\" type=\"text\" placeholder=\"0x000000000000000000000000000000000000000000\" />\n                    </FormGroup>\n                    \n                    <FormGroup>\n                        <Button>Add</Button>\n                    </FormGroup>\n                    \n                    <FormGroup>\n                        <Alert color=\"info\" isOpen={this.state.txAlert} toggle={this.onDismiss}>{this.getTxStatus()}</Alert>\n                    </FormGroup>\n                </Form>\n            </div>            \n        )\n    }\n}\n\nexport default AddShopOwners;","import React, { Component } from 'react';\nimport { Button, Table } from 'reactstrap';\n\nexport default class ListShopOwners extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { shopowners: null };\n\n        this.removeAdmin = this.removeAdmin.bind(this);\n    }\n    \n    componentDidMount() {\n    \n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n    \n        // let drizzle know we want to watch the `get` method\n        const shopowners = contract.methods[\"listShopOwners\"].cacheCall({from: account});\n    \n        // save the `dataKey` to local component state for later reference\n        this.setState({ shopowners });\n    }\n\n    removeAdmin(index) {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        contract.methods[\"removeShopOwner\"].cacheSend(index, {\n          from: drizzleState.accounts[0]\n        });\n    \n    }\n\n    render() {\n\n        // get the contract state from drizzleState\n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        // using the saved `dataKey`, get the variable we're interested in\n        const shopownrs = Marketplace.listShopOwners[this.state.shopowners];\n\n        const l = (shopownrs && shopownrs.value);\n        try{\n           \n            if(l.length !== undefined){\n\n                const ownerList = l.map((owner, index) =>\n                    <tr key={index}><td>{owner}</td><td>\n                        <Button type=\"button\" onClick={this.removeAdmin.bind(this, index)}>Remove</Button>\n                    </td></tr>\n                )\n            \n                return (\n                    <div>\n                        <h3>Shop Owner Accounts</h3>\n                        <Table size=\"sm\" striped responsive>\n                            <thead><tr><th>Account Address</th><th>Action</th></tr></thead>\n                            <tbody>{ownerList}</tbody>\n                        </Table>\n                    </div>\n                )\n            }    \n\n        } catch(err){\n           \n        }\n\n        return(\n            <div><p>No Shop Owners.</p></div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport AddShopOwners from './AddShopOwners';\nimport ListShopOwners from './ListShopOwners';\n\nexport default class ManageShopOwners extends Component{\n    render() {\n        return(\n            <Row>\n                <Col>\n                    <Row>\n                        <Col><ListShopOwners drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} /></Col>\n                    </Row>\n\n                    <Row>\n                        <Col><AddShopOwners drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} /></Col>\n                    </Row>\n                    <hr />\n                </Col>\n            </Row>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Button, FormGroup, Alert } from 'reactstrap';\n\nclass DangerZone extends Component{\n    constructor(props){\n        super(props);\n        this.state = { circuitState: null, owner: null}; \n\n        this.toggleCircuit = this.toggleCircuit.bind(this);\n        this.destroyContract = this.destroyContract.bind(this);\n    }\n\n    componentDidMount() {\n        const { drizzle, drizzleState } = this.props; \n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n    \n        // let drizzle know we want to watch these methods\n        const circuitState = contract.methods[\"getCircuitState\"].cacheCall();\n        const owner = contract.methods[\"isTheOwner\"].cacheCall({from:account});\n    \n        // save the `dataKey` to local component state for later reference\n        this.setState({ circuitState, owner });\n      }\n\n    toggleCircuit(event){\n        const { drizzle } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        contract.methods[\"toggleCircuitBreaker\"].cacheSend();\n    }\n\n    destroyContract(event){\n        const { drizzle } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        contract.methods[\"destroy\"].cacheSend();\n    }\n\n    render() {\n         // get the contract state from drizzleState\n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        // using the saved `dataKey`, get the variable we're interested in\n        const circuit = Marketplace.getCircuitState[this.state.circuitState];\n\n        const circuitstate = (Boolean(circuit && circuit.value))?<Alert color=\"danger\">Circuit is Off</Alert>:<Alert color=\"success\">Circuit is On</Alert>\n\n        const ownr = Marketplace.isTheOwner[this.state.owner];\n\n        const isOwner=(ownr && ownr.value);\n\n        var destroyBttn = null;\n\n        if(isOwner && (Boolean(circuit && circuit.value)===true)){\n            destroyBttn = <Button id=\"destroy\" type=\"submit\" onClick={this.destroyContract} color=\"danger\">Destroy Contract</Button>\n        } else {\n            destroyBttn = <Button id=\"destroy\" type=\"submit\" onClick={this.destroyContract} color=\"danger\" disabled>Destroy Contract</Button>\n        }\n\n        return(\n            <div>\n                <h3>Security &amp; Life Cycle</h3>\n                <FormGroup>\n                    <Button type=\"submit\" onClick={this.toggleCircuit} color=\"danger\">Toggle Circuit Breaker</Button>\n                </FormGroup>\n                <FormGroup>\n                    {circuitstate}\n                </FormGroup>\n                <FormGroup>\n                    {destroyBttn}\n                </FormGroup>\n            </div>\n        )\n    }\n}\n\nexport default DangerZone;","import React, { Component } from 'react';\nimport ManageAdmins from './ManageAdmins';\nimport ManageShopOwners from './ManageShopOwners';\nimport DangerZone from './DangerZone'\nimport { Row, Col } from 'reactstrap';\n\nexport default class Administration extends Component{\n    constructor(props){\n        super(props);\n        this.state = { isAdmin: null };\n    }\n\n    componentDidMount() {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n    \n        // let drizzle know we want to watch the `get` method\n        const isAdmin = contract.methods[\"isAnAdmin\"].cacheCall({from: account});\n    \n        // save the `dataKey` to local component state for later reference\n        this.setState({ isAdmin });\n    }\n    \n    render() {\n        // get the contract state from drizzleState\n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        // using the saved `dataKey`, get the variable we're interested in\n        const Admin = Marketplace.isAnAdmin[this.state.isAdmin];\n\n        if(Boolean(Admin && Admin.value)) {\n               \n        return(\n            <Row id=\"administration\">\n                <Col>\n \n                    <Row>\n                        <Col>\n                            <ManageAdmins drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} />\n                        </Col>\n                    </Row>\n                    \n                    <Row>\n                        <Col>\n                            <ManageShopOwners drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} />\n                        </Col>\n                    </Row>\n           \n                    <Row>\n                        <Col>\n                            <DangerZone drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} />\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        )\n        } else {\n            return(\n                <div id=\"administration\">\n                    <Row>\n                        <Col><p>You must have administrative privileges to access this page. Return to <a href=\"/\">the Marketplace</a></p></Col>\n                    </Row>\n                </div>\n            )\n        }\n\n    }\n}","import React, { Component } from 'react';\n\nexport default class NotFound extends Component{\n\n    render() {\n \n        return(\n            <h2>404</h2>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Switch, Route } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\n// UI componenets\nimport Unav from \"./components/page/Unav\";\nimport EventStream from \"./components/page/EventStream\";\n\nimport MarketplaceListContainer from \"./components/marketplace/MarketplaceListContainer\";\nimport ShopListContainer from \"./components/marketplace/ShopListContainer\";\nimport ShopManagement from \"./components/shop/ShopManagement\";\nimport Administration from \"./components/admin/Administration\";\nimport NotFound from \"./components/page/NotFound\";\n\n\nexport default class App extends Component {\n  state = { \n    loading: true, \n    drizzleState: null,\n  };\n\n  componentDidMount() {\n      const { drizzle } = this.props;\n  \n      // subscribe to changes in the store\n      this.unsubscribe = drizzle.store.subscribe(() => {\n  \n        // every time the store updates, grab the state from drizzle\n        const drizzleState = drizzle.store.getState();\n  \n        // check to see if it's ready, if so, update local component state\n        if (drizzleState.drizzleStatus.initialized) {\n\n          this.setState({ loading: false, drizzleState });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    if (this.state.loading) {\n      return (\n      <Container>\n        <Row>\n          <Col>\n            Loading Drizzle...\n          </Col>\n        </Row>\n      </Container>\n    )\n  } else {\n\n    return (\n        \n        <Container>\n          \n          <Unav drizzle={this.props.drizzle} drizzleState={this.state.drizzleState} />\n          <EventStream drizzle={this.props.drizzle} drizzleState={this.state.drizzleState}/>\n\n          <Switch>\n            <Route exact path=\"/\" render={(props) => <MarketplaceListContainer {...props} drizzle={this.props.drizzle} drizzleState={this.state.drizzleState} /> } />\n            <Route path=\"/manage-shops\" render={(props) => <ShopManagement {...props} drizzle={this.props.drizzle} drizzleState={this.state.drizzleState} /> } />\n            <Route path=\"/admin\" render={(props) => <Administration {...props} drizzle={this.props.drizzle} drizzleState={this.state.drizzleState} /> } /> \n            <Route path=\"/shops/:id\" render={(props) => <ShopListContainer {...props} drizzle={this.props.drizzle} drizzleState={this.state.drizzleState} /> } /> \n            <Route component={NotFound} />\n          </Switch>\n         \n        </Container>\n      \n    );\n    }\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// 1. Import drizzle, drizzle-react, and your contract artifacts.\nimport { Drizzle, generateStore } from \"drizzle\";\nimport Marketplace from \"./contracts/Marketplace.json\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// 2. Setup the drizzle instance.\nconst options = { contracts: [Marketplace] };\nconst drizzleStore = generateStore(options);\nconst drizzle = new Drizzle(options, drizzleStore);\n\n\nReactDOM.render(\n    <Router>\n        <App drizzle={drizzle}/>\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Input, Label, Alert } from 'reactstrap';\n\nexport default class AddProduct extends Component{\n\n    constructor(props){\n        super(props);\n       \n        this.state = { \n            stackId: null, \n            txAlert: false,\n            buffer:''\n          };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onDismiss = this.onDismiss.bind(this);\n    }\n\n    //Take file input from user\n    captureFile =(event) => {\n        event.stopPropagation()\n        event.preventDefault()\n        const file = event.target.files[0]\n        if(file == null)\n            return;\n        let reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = () => this.convertToBuffer(reader)\n    };\n\n    //Convert the file to buffer to store on IPFS\n    convertToBuffer = async(reader) => {\n        //file is converted to a buffer for upload to IPFS\n        const buffer = await Buffer.from(reader.result);\n        //set this buffer-using es6 syntax\n        this.setState({buffer});\n    };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        const shopID = parseInt(e.target.shopID.value);\n        const name = e.target.prod_name.value;\n        const description = e.target.prod_desc.value;\n        const price = e.target.prod_price.value;\n\n        if(shopID === '' || name === '' || price === '') return;\n        \n        if(this.state.buffer !== ''){\n            //save document to IPFS, return its hash#\n            const IPFS = require('ipfs-http-client');\n            const ipfs = new IPFS('ipfs.infura.io', '5001', { protocol: 'https' });\n\n            await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n\n                if(err){\n                    //console.log(err);\n                    return;\n                }\n\n                const hash = ipfsHash[0].hash;\n                \n                this.setValues(shopID, name, description, price, hash );\n            });\n        } else {\n            this.setValues(shopID, name, description, price, '' );\n        }\n        \n      };\n\n    onDismiss(){\n        this.setState({txAlert: false});\n    }\n    \n    setValues(shopID, name, desc, price, hash) {\n        //console.log(\"in setValues\");\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n\n        const _price = drizzle.web3.utils.toWei(price, 'finney'); \n\n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"addItemToShop\"].cacheSend(\n            \n                shopID, \n                name, \n                desc,\n                hash,\n                _price,\n                {from: account}\n        );\n\n        this.setState({ stackId });\n        this.setState({txAlert: true});      \n    };\n    \n    getTxStatus(){\n        //console.log(\"in getTxStatus\");\n        // get the transaction states from the drizzle state\n        const { transactions, transactionStack } = this.props.drizzleState;\n    \n        // get the transaction hash using our saved `stackId`\n        const txHash = transactionStack[this.state.stackId];\n    \n        // if transaction hash does not exist, don't display anything\n        if (!txHash) {\n\n            return 'Connecting...';\n        }\n\n        // otherwise, return the transaction status\n        return `Transaction status: ${transactions[txHash].status}`;\n      };\n\n    render() {\n        //console.log('AddProducts');\n        return(\n        \n            <div>\n                <h3>Add New Product</h3>\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label htmlFor=\"shopID\">Shop ID</Label>\n                        <Input id=\"shopID\" name=\"shopID\" type=\"text\" placeholder=\"0\" />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor=\"prod_name\">Name</Label>\n                        <Input id=\"prod_name\" name=\"prod_name\" type=\"text\" placeholder=\"My New Product\" />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor=\"prod_desc\">Description</Label>\n                        <Input id=\"prod_desc\" name=\"prod_desc\" type=\"text\" placeholder=\"This product is...\" />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor=\"prod_price\">Price (finney)</Label>\n                        <Input id=\"prod_price\" name=\"prod_price\" type=\"text\" placeholder=\"3\" />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor=\"prod_image\">Product Image</Label>\n                        <Input id=\"prod_image\" name=\"prod_image\" type=\"file\" onChange = {this.captureFile} />\n                    </FormGroup>\n                    \n                    <FormGroup>\n                        <Button>Create</Button>\n                    </FormGroup>\n                    \n                    <FormGroup>\n                        <Alert color=\"info\" isOpen={this.state.txAlert} toggle={this.onDismiss}>{this.getTxStatus()}</Alert>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}"],"sourceRoot":""}