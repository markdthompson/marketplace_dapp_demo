{"version":3,"sources":["components/page/ActiveAddresses.js","components/page/Unav.js","components/page/EventStream.js","components/marketplace/ViewMarketplace.js","components/marketplace/MarketplaceContainer.js","components/marketplace/MarketplaceListContainer.js","components/marketplace/Shop.js","components/marketplace/ShopContainer.js","components/marketplace/ShopListContainer.js","components/shop/ListShops.js","components/shop/AddShop.js","components/shop/ManageShops.js","components/shop/ListProducts.js","components/shop/ManageProducts.js","components/shop/ShopManagement.js","components/admin/AddAdmins.js","components/admin/ListAdmins.js","components/admin/ManageAdmins.js","components/admin/AddShopOwners.js","components/admin/ListShopOwners.js","components/admin/ManageShopOwners.js","components/admin/DangerZone.js","components/admin/Administration.js","components/page/NotFound.js","App.js","serviceWorker.js","index.js","components/shop/AddProduct.js"],"names":["ActiveAddresses","network","_this$props","this","props","drizzle","drizzleState","contract","contracts","Marketplace","networkID","web3","networkId","ActiveUser","accounts","ActiveContract","address","ActiveUserLink","react_default","a","createElement","target","href","ActiveContractLink","Table","size","style","marginBottom","bordered","responsive","Component","Unav","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isAdmin","isShopOwner","account","methods","cacheCall","from","setState","isAnAdmin","isAShopOwner","links","link","Link","to","className","key","Boolean","value","push","navlist","map","NavItem","Row","Col","Navbar","color","dark","expand","NavbarBrand","Nav","navbar","ActiveAddresses_ActiveAddresses","EventStream","event","_this2","events","allEvents","err","result","console","log","name","txHash","block","output","transactionHash","blockNumber","txLink","UncontrolledAlert","ViewMarketplace","shops","length","shopList","shop","index","pathname","category","striped","MarketplaceContainer","itemKeys","shopKeys","i","shopCount","itemCount","id","items","forEach","item","ViewMarketplace_ViewMarketplace","MarketplaceListContainer","shopCountKey","itemCountKey","isShop","match","path","sc","getShopCount","ic","getItemCount","MarketplaceContainer_MarketplaceContainer","Shop","getTxStatus","_this$props$drizzleSt","transactions","transactionStack","stackId","concat","status","stackID","txAlert","sku","price","buy","_sku","_price","parseInt","cacheSend","receive","_this$props2","shopID","params","myShop","undefined","myItems","buyer","itemList","Card","CardImg","top","src","ipfsImageHash","CardBody","CardTitle","CardSubtitle","description","CardText","utils","fromWei","Button","onClick","handleBuy","bind","disabled","handleReceive","CardColumns","ShopContainer","Shop_Shop","ShopListContainer","ShopContainer_ShopContainer","ListShops","ids","_shopID","setValue","balance","handleWithdrawal","AddShop","handleSubmit","assertThisInitialized","onDismiss","e","preventDefault","shop_name","setValues","shop_cat","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","placeholder","Alert","isOpen","toggle","ManageShops","refresh","ManageShopsCallback","getShopIDsByOwner","ListShops_ListShops","AddShop_AddShop","callback","ListProducts","itemID","ship","archive","_this$props3","rel","height","width","alt","handleShip","handleArchive","ManageProducts","itemsKey","getItemsBySeller","ListProducts_ListProducts","AddProduct","Administration","ShopOwner","ManageShops_ManageShops","ManageProducts_ManageProducts","AddAdmins","admin_address","ListAdmins","admins","removeAdmin","admns","listAdmins","l","adminList","admin","ManageAdmins","ListAdmins_ListAdmins","AddAdmins_AddAdmins","AddShopOwners","shopowner_address","ListShopOwners","shopowners","shopownrs","listShopOwners","ownerList","owner","ManageShopOwners","ListShopOwners_ListShopOwners","admin_AddShopOwners","DangerZone","circuitState","toggleCircuit","destroyContract","circuit","getCircuitState","circuitstate","ownr","isTheOwner","destroyBttn","Admin","ManageAdmins_ManageAdmins","ManageShopOwners_ManageShopOwners","admin_DangerZone","NotFound","App","loading","unsubscribe","store","subscribe","getState","drizzleStatus","initialized","_this3","Container","Unav_Unav","EventStream_EventStream","Switch","Route","exact","render","MarketplaceListContainer_MarketplaceListContainer","assign","ShopManagement_Administration","Administration_Administration","ShopListContainer_ShopListContainer","component","window","location","hostname","options","drizzleStore","generateStore","Drizzle","ReactDOM","HashRouter","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","_home_mark_Projects_Ethereum_mdt_final_project_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mark_Projects_Ethereum_mdt_final_project_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_mark_Projects_Ethereum_mdt_final_project_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","captureFile","stopPropagation","file","files","reader","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","_ref","_home_mark_Projects_Ethereum_mdt_final_project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mark_Projects_Ethereum_mdt_final_project_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","buffer","wrap","_context","prev","next","Buffer","sent","stop","_x","apply","arguments","_ref2","_callee2","IPFS","ipfs","_context2","prod_name","prod_desc","prod_price","abrupt","require","protocol","add","ipfsHash","hash","_x2","_home_mark_Projects_Ethereum_mdt_final_project_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","desc","toWei","react__WEBPACK_IMPORTED_MODULE_8___default","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","onChange","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__"],"mappings":"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","file":"static/js/main.62277f28.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Table } from 'reactstrap';\n\nexport default class ActiveAddresses extends Component{\n\n    render() {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n\n        const networkID = drizzleState.web3.networkId;\n        const ActiveUser = drizzleState.accounts[0];\n        const ActiveContract = contract.address;\n\n        let network;\n\n        switch(networkID){\n            case 3: \n                network = 'Ropsten';\n                break;\n            case 4: \n                network = 'Rinkeby';\n                break;\n            case 42: \n                network = 'Kovan';\n                break;\n\n            default:\n                network = '';\n        }\n\n        const tableStyle = {\n            marginBottom: 40\n        }\n\n        const ActiveUserLink = <a target=\"_blank\" href={'https://'+ network +'.etherscan.io/address/' + ActiveUser}>{ActiveUser}</a>;\n        const ActiveContractLink = <a target=\"_blank\" href={'https://'+ network +'.etherscan.io/address/' + ActiveContract}>{ActiveContract}</a>;\n\n        return(\n            <Table size=\"sm\" style={tableStyle} bordered responsive>\n                <thead><tr><th>Network</th><th>Active External Account</th><th>Active Contract Account</th></tr></thead>\n                <tbody><tr>\n                    <td>{(networkID === 3 || networkID === 4 || networkID === 42) ? network : 'Development'}</td>\n                    <td>{(networkID === 3 || networkID === 4 || networkID === 42) ? ActiveUserLink : ActiveUser}</td>\n                    <td>{(networkID === 3 || networkID === 4 || networkID === 42) ? ActiveContractLink : ActiveContract}</td>\n                </tr></tbody>\n            </Table>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, NavbarBrand, Nav, NavItem, Row, Col } from 'reactstrap'; \nimport ActiveAddresses from \"./ActiveAddresses.js\"\n\nexport default class Unav extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { isAdmin: null, isShopOwner: null };\n    }\n\n    componentDidMount() {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n\n        //console.log(contract);\n    \n        // let drizzle know we want to watch the `get` method\n        const isAdmin = contract.methods[\"isAnAdmin\"].cacheCall({from: account});\n        const isShopOwner = contract.methods[\"isAShopOwner\"].cacheCall({from: account});\n    \n        // save the `dataKey` to local component state for later reference\n        this.setState({ isAdmin, isShopOwner });\n    }\n\n    render() {\n        // get the contract state from drizzleState\n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        // using the saved `dataKey`, get the variable we're interested in\n        const isAdmin = Marketplace.isAnAdmin[this.state.isAdmin];\n        const isShopOwner = Marketplace.isAShopOwner[this.state.isShopOwner];\n\n        const links = [{link: <Link to=\"/\" className=\"nav-link\">Marketplace</Link>, key:'marketplace'}];\n        if(Boolean(isShopOwner && isShopOwner.value)) links.push({link: <Link to=\"/manage-shops\" className=\"nav-link\">Manage Shops</Link>, key:\"manageshops\"});\n        if(Boolean(isAdmin && isAdmin.value)) links.push({link:<Link to=\"/admin\" className=\"nav-link\">Admin</Link>, key:\"admin\"});\n\n        const navlist = links.map((link) => \n            <NavItem key={link.key}>{link.link}</NavItem>\n        );\n\n        return(\n            <Row>\n                <Col>\n                    <Navbar color=\"dark\" dark expand=\"lg\">\n                        <NavbarBrand className=\"logo\" href=\"./#/\">Marketplace Dapp Demo</NavbarBrand>\n                        <Nav className=\"ml-auto\" navbar>\n                            {navlist}\n                        </Nav>\n                    </Navbar>\n                    <ActiveAddresses drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} />\n                </Col>\n            </Row>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {UncontrolledAlert} from 'reactstrap';\n\nexport default class EventStream extends Component{\n    constructor(props){\n        super(props);\n        this.state = { \n            event: null,\n\n        };\n    }\n\n    componentDidMount(){\n        const { drizzle } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n\n        contract.events.allEvents((err,result)=>{\n            if(err){\n                console.log(err);\n            } else {\n                const event = result;\n                this.setState({event});\n            }\n        });\n\n    }\n\n    render() {\n        const { drizzleState } = this.props;\n\n        const networkID = drizzleState.web3.networkId;\n\n        let network;\n\n        switch(networkID){\n            case 3: \n                network = 'Ropsten';\n                break;\n            case 4: \n                network = 'Rinkeby';\n                break;\n            case 42: \n                network = 'Kovan';\n                break;\n\n            default:\n                network = '';\n        }\n\n        let event = {\n            name: null,\n            txHash: null,\n            block: null\n        }\n\n        let output = '';\n\n        if(this.state.event !== null) {\n            event.name = this.state.event.event;\n            event.txHash = this.state.event.transactionHash;\n            event.block = this.state.event.blockNumber;\n\n            let txLink = <a href={'https://'+ network +'.etherscan.io/tx/' + event.txHash}>{event.txHash}</a>\n\n            output = <UncontrolledAlert color=\"info\">\n                <em>Last Event</em>: {event.name}, Tx: {network != '' ? txLink : event.txHash}, BlockNumber: {event.block}</UncontrolledAlert>\n        }\n            \n        return(\n            output\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table } from 'reactstrap';\n\nexport default class ViewMarketplace extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { \n        };\n\n         //console.log('ViewMarketplace');\n         //console.log(this.props);\n    }\n\n    render() {  \n        //console.log(this.props);\n            \n            if(this.props.shops.length > 0 ){\n\n                const shopList = this.props.shops.map((shop, index) => \n                    <tr key={index}>\n                        <td><Link to={{ pathname: '/shops/' + index }} >{shop.name}</Link></td>\n                        <td>{shop.category}</td>\n                    </tr>\n                )\n                \n                return (\n                    \n                    <div>\n                        <h1>The Shops</h1>\n                    \n                        <Table size=\"sm\" striped>\n                            <thead><tr>\n                                <th>Name</th>\n                                <th>Category</th>\n                            </tr></thead>\n                            <tbody>{shopList}</tbody>\n                        </Table>\n                        <div>\n                            <p>*Email me at <a href=\"mailto:thomesoni@gmail.com\">thomesoni@gmail.com</a> to request Shop Owner access. Please include a Ropsten or Rinkeby external address in your request.</p>\n                        </div>\n                    </div>\n                )\n            }    \n\n        return(\n            <div><p>You haven't opened any shops yet.</p></div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport ViewMarketplace from \"./ViewMarketplace\";\n\nexport default class MarketplaceContainer extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            itemKeys: null,\n            shopKeys: null\n        }\n\n        //console.log(\"MarketplaceContainer\");\n        //console.log(this.props);\n    }\n\n    componentDidMount(){\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n        \n        // shops\n        const shopKeys = [];\n        for( let i = 0; i<this.props.shopCount; i++){\n            shopKeys.push(contract.methods['shops'].cacheCall(i,{from: account}));\n        }\n        this.setState({shopKeys});\n\n        const itemKeys = [];\n        for( let i = 0; i<this.props.itemCount; i++){\n            itemKeys.push(contract.methods['items'].cacheCall(i,{from: account}));\n        }\n        this.setState({itemKeys});\n    }\n\n    render() {\n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        if(this.state.shopKeys === null || this.state.itemKeys === null){\n            //console.log('loading..');\n            return (\n                <div>Loading...</div>\n            );\n\n        } else {\n            if(!this.state.shopKeys.length){\n                return (\n                    <div id=\"marketplace\">\n                    <h1>Welcome</h1>\n                    <p>Welcome to the Marketplace Demo Dapp! To get started, follow these steps:</p>\n\n                    <h2>I. Add a Shop Owner</h2>\n                    <ol>\n                        <li>Make sure you're logged into MetaMask as Account 1</li>\n                        <li>Click the 'Admin' link to the top left of the header</li>\n                        <li>Look to the bottom of the Admin page for the 'Add ShopOwner' section</li>\n                        <li>In MetaMask, copy another account address, or use your Account 1 address, and paste it into the 'Enter Account Address' field</li>\n                        <li>Click the 'Add' Button</li>\n                        <li>MetaMask will prompt you to confirm the transaction, confirm it</li>\n                    </ol>\n\n                    <h2>II. Open a Shop</h2>\n                    <ol>\n                        <li>In MetaMask, switch to the account you added to the ShopOwners list in step I (if you gave your Account 1 ShopOwner permissions skip to step 4) </li>\n                        <li>Reload the app to load the new account by clicking on the 'Marketplace Dapp Demo' link in the header</li>\n                        <li>Check the Active External Account field in the header to make sure you're logged in with the ShopOwner account</li>\n                        <li>Click the 'Manage Shops' link to the top left of the header</li>\n                        <li>In the middle of the Manage Shops page find the 'Open Shop' section</li>\n                        <li>Type in your shop name and category and click 'Create'</li>\n                        <li>MetaMask will prompt you to confirm the transaction, confirm it</li>\n                        <li>Click the 'Marketplace' link in the header to check if your shop is now listed</li>\n                    </ol>\n                    <h2>III. Add Some Products</h2>\n                    <ol>\n                        <li>While still logged in as ShopOwner, click again on the 'Manage Shops' link in the header</li>\n                        <li>Toward the bottom of the Manage Shops page find the 'Add New Product' section</li>\n                        <li>Type in the shop id, name, description, price and choose an image to upload - click 'Create'</li>\n                        <li>MetaMask will prompt you to confirm the transaction, confirm it</li>\n                        <li>Click the 'Marketplace' link in the header and click into your shop</li>\n                        <li>Your product should now be listed</li>\n                    </ol>\n\n                    <h2>IV. Tell Your Friends!</h2>\n                                    \n                    </div>\n                )\n            } else {\n\n                const items = [];\n                const shops = [];\n            \n                this.state.itemKeys.forEach((key)=>{\n                    let item = Marketplace.items[key]; \n                    //console.log(item && item.value);      \n                    items.push(item && item.value);\n                });\n        \n                this.state.shopKeys.forEach((key)=>{\n                    let shop = Marketplace.shops[key];\n                    //console.log(shop && shop.value);       \n                    shops.push(shop && shop.value);\n                });\n        \n                try {\n        \n                    if(!Boolean(shops[shops.length-1]) || !Boolean(shops[shops.length-1])){\n                        return (\n                            <div>Loading...</div>\n                        )\n                    } else {\n                        return (\n                            <ViewMarketplace \n                                drizzle={this.props.drizzle} \n                                drizzleState={this.props.drizzleState} \n                                shops={shops}\n                                items={items}\n                            />\n                        )\n                    }\n        \n                } catch(err){\n                    console.log(err);\n                }\n            }\n        }\n    }\n}","import React, { Component } from 'react';\nimport MarketplaceContainer from \"./MarketplaceContainer\";\n\nexport default class MarketplaceListContainer extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = { \n            shopCountKey: null,\n            itemCountKey: null,\n            isShop: null,\n            match: null\n        };\n\n        //console.log(\"MarketplaceListContainer\");\n        //console.log(this.props);\n    }\n\n    componentDidMount() {\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n\n        const shopCountKey = contract.methods[\"getShopCount\"].cacheCall({from: account});\n        this.setState({shopCountKey});\n        \n        const itemCountKey = contract.methods[\"getItemCount\"].cacheCall({from: account});\n        this.setState({itemCountKey});\n\n        if(this.props.match.path === \"/shops/:id\"){\n            this.setState({isShop: true});\n        } else {\n            this.setState({isShop: false});\n        }\n\n        this.setState({match: this.props.match});\n    }\n    \n    render() {\n        //console.log(this.state);\n        const { Marketplace } = this.props.drizzleState.contracts;\n        \n        if(this.state.shopCountKey === null || this.state.itemCountKey === null){\n            return (\n                <div>Loading...</div>\n            )\n        } else {\n            const sc = Marketplace.getShopCount[this.state.shopCountKey];\n            const ic = Marketplace.getItemCount[this.state.itemCountKey];\n\n            const shopCount = (sc && sc.value);\n            const itemCount = (ic && ic.value);\n\n            if((!Boolean(shopCount)) || (!Boolean(itemCount)) ){\n                return(\n                    <div>Loading...</div>\n                )\n            } else {\n\n                return(\n                    <MarketplaceContainer \n                        drizzle={this.props.drizzle} \n                        drizzleState={this.props.drizzleState} \n                        shopCount= { shopCount }\n                        itemCount={ itemCount }\n                        isShop={this.state.isShop} \n                        match={this.state.match}\n                    />\n                )\n            }\n        }\n    }\n}\n ","import React, { Component } from 'react';\nimport { CardColumns, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport {Link} from 'react-router-dom';\n\nexport default class Shop extends Component{\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            stackID: null,\n            txAlert: false\n        }\n    \n        //console.log('Shop');\n        //console.log(this.props);\n    }\n\n    onDismiss(){\n        this.setState({txAlert: false});\n    }\n\n    handleBuy(sku, price) {\n        //console.log(price);\n        this.buy(sku, price);\n    };\n\n    buy(_sku, _price) {\n        const sku = parseInt(_sku);\n        const price = parseInt(_price);\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"buyItem\"].cacheSend(sku, {\n          from: drizzleState.accounts[0], value: price\n        });\n    \n        // save the `stackId` for later reference\n        this.setState({ stackId });\n        this.setState({txAlert: true});\n    };\n\n    handleReceive(sku) {\n        //console.log(sku);\n        this.receive(sku);\n    };\n\n    receive(_sku) {\n        const sku = parseInt(_sku);\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"receiveItem\"].cacheSend(sku, {\n          from: drizzleState.accounts[0]\n        });\n    \n        // save the `stackId` for later reference\n        this.setState({ stackId });\n        this.setState({txAlert: true});\n    };\n    \n    getTxStatus = () => {\n        // get the transaction states from the drizzle state\n        const { transactions, transactionStack } = this.props.drizzleState;\n    \n        // get the transaction hash using our saved `stackId`\n        const txHash = transactionStack[this.state.stackId];\n    \n        // if transaction hash does not exist, don't display anything\n        if (!txHash) {\n            return 'Connecting...';\n        }\n\n        // otherwise, return the transaction status\n        return `Transaction status: ${transactions[txHash].status}`;\n      };\n   \n    render() {\n        const account = this.props.drizzleState.accounts[0];\n\n        const shopID = this.props.match.params.id;\n        const myShop = this.props.shops[shopID];\n\n        if(this.props.items[this.props.items.length-1] !== undefined ){\n\n            // filter items for only those beloning to this shop\n            let myItems = [];\n            for(let i=0; i<this.props.items.length; i++){\n                \n                // make sure it belongs to this store\n                if(this.props.items[i].shopID === shopID){\n                    // and that it's still for sale\n                    if(this.props.items[i].state === '0') {\n                        myItems.push(this.props.items[i]);\n                    } else {\n                        // or that it ws ordered by this user\n                        if(this.props.items[i].buyer === account) {\n                            // and is awaiting shipment or was shipped but not received\n                            if(this.props.items[i].state === '1' || this.props.items[i].state === '2'){\n                                myItems.push(this.props.items[i]);\n                            }  \n                        }\n                    }\n                    \n                }\n            }\n\n            // any shops in my store?\n            if(myItems.length){\n                \n                const itemList = myItems.map((item, index) => {\n                    return <Card key={index}>\n                                <CardImg top src={'https://ipfs.io/ipfs/' +  item.ipfsImageHash} />\n                                <CardBody>\n                                    <CardTitle>{item.name}</CardTitle>\n                                    <CardSubtitle>{item.description}</CardSubtitle>\n                                    <CardText>Price: {this.props.drizzle.web3.utils.fromWei(item.price,'finney')} finney</CardText>\n                                    \n                                    {item.state === '0' ? (\n                                        <Button onClick={this.handleBuy.bind(this, item.sku, item.price)} >Buy Now</Button> ) : (\n                                            item.state === '1' && item.buyer === account ? (\n                                                <Button disabled>Ordered</Button> \n                                            ) : (\n                                                item.state === '2' && item.buyer === account ? (\n                                                    <Button onClick={this.handleReceive.bind(this, item.sku)} >Receive</Button>\n                                                ) : (\n                                                <Button disabled>Sold!</Button> \n                                                )\n                                            )\n                                    )}\n                                </CardBody>\n                            </Card>\n                });\n            \n                return (\n                    <div>\n                        <h1>{myShop.name}</h1>\n                \n                        <CardColumns>\n                            {itemList}\n                        </CardColumns>\n                                          \n                        <div className=\"shop-footer\">\n                            <Link to=\"/\">&lt;&lt; Back to Shops</Link>\n                        </div>\n                    </div>\n                )\n\n            } else {\n                return (\n                    <div>\n                        <h2>{myShop.name}</h2>\n                \n                        <div>{myShop.name} doesn't have any items posted for sale.</div>\n                    \n                        <Link to=\"/\">&lt;&lt; Back to Shops</Link>\n\n                    </div>\n                )\n            }\n\n        } else {\n            return (\n                <div>\n                    <h2>{myShop.name}</h2>\n                    <div>No items for sale!</div>\n\n                    <Link to=\"/\">&lt;&lt; Back to Shops</Link>\n                </div>\n            )\n        }    \n    }\n}\n","import React, { Component } from 'react';\nimport Shop from \"./Shop\";\n\nexport default class ShopContainer extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            itemKeys: null,\n            shopKeys: null\n        }\n\n        //console.log(\"ShopContainer\");\n        //console.log(this.props);\n    }\n\n    componentDidMount(){\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n        \n        // shops\n        const shopKeys = [];\n        for( let i = 0; i<this.props.shopCount; i++){\n            shopKeys.push(contract.methods['shops'].cacheCall(i,{from: account}));\n        }\n        this.setState({shopKeys});\n\n        const itemKeys = [];\n        for( let i = 0; i<this.props.itemCount; i++){\n            itemKeys.push(contract.methods['items'].cacheCall(i,{from: account}));\n        }\n        this.setState({itemKeys});\n    }\n\n    render() {\n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        if(this.state.shopKeys === null || this.state.itemKeys === null){\n            //console.log('loading..');\n            return (\n                <div>Loading...</div>\n            );\n\n        } else {\n            if(!this.state.shopKeys.length){\n                return (\n                    <div id=\"marketplace\">\n                    <h1>Welcome</h1>\n                    <p>Welcome to the Marketplace Demo Dapp! To get started, follow these steps:</p>\n\n                    <h2>1) Add a Shop Owner</h2>\n\n                    <h2>2) Open a Shop</h2>\n\n                    <h2>3) Add Some Products</h2>\n\n                    <h2>4) Tell Your Friends!</h2>\n                    </div>\n                )\n            } else {\n\n                const items = [];\n                const shops = [];\n            \n                this.state.itemKeys.forEach((key)=>{\n                    let item = Marketplace.items[key]; \n                    //console.log(item && item.value);      \n                    items.push(item && item.value);\n                });\n        \n                this.state.shopKeys.forEach((key)=>{\n                    let shop = Marketplace.shops[key];\n                    //console.log(shop && shop.value);       \n                    shops.push(shop && shop.value);\n                });\n        \n                try {\n        \n                    if(!Boolean(shops[shops.length-1]) || !Boolean(shops[shops.length-1])){\n                        return (\n                            <div>Loading...</div>\n                        )\n                    } else {\n                        if(this.props.isShop){\n                            return (\n                                <Shop \n                                    drizzle={this.props.drizzle} \n                                    drizzleState={this.props.drizzleState} \n                                    shops={shops} \n                                    items={items}\n                                    match={this.props.match} \n                                />\n                            )\n\n                        } else  {\n                            return (\n                                <div>Shop not found.</div>\n                            )\n                        }\n                    }\n        \n                } catch(err){\n                    console.log(err);\n                    \n                }\n\n            }\n        }\n \n    }\n}\n","import React, { Component } from 'react';\nimport ShopContainer from \"./ShopContainer\";\n\nexport default class ShopListContainer extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = { \n            shopCountKey: null,\n            itemCountKey: null,\n            isShop: null,\n            match: null\n        };\n\n        //console.log(\"shopListContainer\");\n        //console.log(this.props);\n    }\n\n    componentDidMount() {\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n\n        const shopCountKey = contract.methods[\"getShopCount\"].cacheCall({from: account});\n        this.setState({shopCountKey});\n        \n        const itemCountKey = contract.methods[\"getItemCount\"].cacheCall({from: account});\n        this.setState({itemCountKey});\n\n        if(this.props.match.path === \"/shops/:id\"){\n            this.setState({isShop: true});\n        } else {\n            this.setState({isShop: false});\n        }\n\n        this.setState({match: this.props.match});\n    }\n    \n    render() {\n        //console.log(this.state);\n        const { Marketplace } = this.props.drizzleState.contracts;\n        \n        if(this.state.shopCountKey === null || this.state.itemCountKey === null){\n            return (\n                <div>Loading...</div>\n            )\n        } else {\n            const sc = Marketplace.getShopCount[this.state.shopCountKey];\n            const ic = Marketplace.getItemCount[this.state.itemCountKey];\n\n            const shopCount = (sc && sc.value);\n            const itemCount = (ic && ic.value);\n\n            if((!Boolean(shopCount)) || (!Boolean(itemCount)) ){\n                return(\n                    <div>Loading...</div>\n                )\n            } else {\n\n                return(\n                    <ShopContainer \n                        drizzle={this.props.drizzle} \n                        drizzleState={this.props.drizzleState} \n                        shopCount= { shopCount }\n                        itemCount={ itemCount }\n                        isShop={this.state.isShop} \n                        match={this.state.match}\n                    />\n                )\n            }\n        }\n    }\n}","import React, { Component } from 'react';\nimport { Table, Button } from 'reactstrap';\n\nexport default class ListShops extends Component{\n\n    constructor(props){\n\n        super(props);\n\n        this.state = { \n            shops: [],\n         };\n    }\n    \n    componentDidMount() {\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n\n        let shops = [];\n        \n        this.props.ids.value.forEach((shopID)=>{\n            shops.push(contract.methods[\"shops\"].cacheCall(shopID, {from: account}));\n        }); \n\n        this.setState({shops});\n    }\n\n    handleWithdrawal(_shopID){\n        this.setValue(_shopID);\n    }\n\n    setValue(_shopID) {\n        const shopID = parseInt(_shopID);\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"withdrawFunds\"].cacheSend(shopID, {\n          from: drizzleState.accounts[0]\n        });\n    \n        // save the `stackId` for later reference\n        this.setState({ stackId });\n        this.setState({txAlert: true});\n    };\n\n    render() {\n        \n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        let shops = [];\n        this.state.shops.forEach((key, index)=>{\n            let shop = Marketplace.shops[key];       \n            shops.push(shop && shop.value);\n        });\n    \n        try{\n            \n            if(shops.length >0 ){\n\n                const shopList = shops.map((shop, index) =>\n                    <tr key={index}>\n                        <td>{shop.shopID}</td>\n                        <td>{shop.name}</td>\n                        <td>{shop.category}</td>\n                        <td>{this.props.drizzle.web3.utils.fromWei(shop.balance, 'finney')} </td>\n                        {shop.balance === '0' ? (\n                            <td><Button disabled>Withdraw Balance</Button></td>\n                        ) : (\n                            <td><Button onClick={this.handleWithdrawal.bind(this, index)}>Withdraw Balance</Button></td>\n                        )}\n                        \n                    </tr>\n                )\n            \n                return (\n                    <div>\n                        <h3>My Shops</h3>\n                        <Table size=\"sm\" striped>\n                            <thead><tr>\n                                <th>ShopID</th>\n                                <th>Name</th>\n                                <th>Category</th>\n                                <th>Balance (finney)</th>\n                                <th>Action</th>\n                            </tr></thead>\n                            <tbody>{shopList}</tbody>\n                        </Table>\n                    </div>\n                )\n            }    \n\n        } catch(err){\n           //console.log(err);\n        }\n    \n        return(\n            <div><p>You haven't opened any shops yet.</p></div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Input, Label, Alert} from 'reactstrap';\n\nexport default class AddShop extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { \n            stackId: null, \n            txAlert: false,\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onDismiss = this.onDismiss.bind(this);\n    }\n\n\n    onDismiss(){\n        this.setState({txAlert: false});\n    }\n    \n    handleSubmit(e) {\n        e.preventDefault(); \n        if(e.target.shop_name.value === '') return;\n        this.setValues(e.target.shop_name.value, e.target.shop_cat.value);\n        e.target.shop_name.value = '';\n        e.target.shop_cat.value = '';\n    };\n    \n    setValues(name, category) {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n    \n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"createShop\"].cacheSend(name, category, {\n          from: account\n        });\n    \n        // save the `stackId` for later reference\n        this.setState({ stackId });\n        this.setState({txAlert: true});\n    };\n    \n    getTxStatus = () => {\n        // get the transaction states from the drizzle state\n        const { transactions, transactionStack } = this.props.drizzleState;\n    \n        // get the transaction hash using our saved `stackId`\n        const txHash = transactionStack[this.state.stackId];\n    \n        // if transaction hash does not exist, don't display anything\n        if (!txHash) {\n\n            return 'Connecting...';\n        }\n\n        // otherwise, return the transaction status\n        return `Transaction status: ${transactions[txHash].status}`;\n    };\n\n    render() {\n\n        return(\n \n            <div>\n                <h3>Open New Shop</h3>\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label htmlFor=\"shop_name\">Shop Name</Label>\n                        <Input id=\"shop_name\" name=\"shop_name\" type=\"text\" placeholder=\"My New Shop\" />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor=\"shop_cat\">Shop Category</Label>\n                        <Input id=\"shop_cat\" name=\"shop_cat\" type=\"text\" placeholder=\"My Category\" />\n                    </FormGroup>\n                    \n                    <FormGroup>\n                        <Button>Create</Button>\n                    </FormGroup>\n                    \n                    <FormGroup>\n                        <Alert color=\"info\" isOpen={this.state.txAlert} toggle={this.onDismiss}>{this.getTxStatus()}</Alert>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport ListShops from \"./ListShops\";\nimport AddShop from \"./AddShop\";\nimport {Row, Col} from 'reactstrap';\n\nexport default class ManageShops extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = { \n            shopKeys: null,\n            refresh: false\n        };\n\n        this.ManageShopsCallback = this.ManageShopsCallback.bind(this);\n    }\n\n    componentDidMount() {\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n\n        const shopKeys = contract.methods[\"getShopIDsByOwner\"].cacheCall(account, {from: account});\n\n        this.setState({ shopKeys});\n    }\n\n    ManageShopsCallback(){\n        //this.setState({ refresh: !this.state.refresh });\n    }\n    \n    render() {\n        if(this.state.shopKeys === null){\n            return (\n                <div>Loading shopKeys...</div>\n            )\n        \n        } else {\n            const { Marketplace } = this.props.drizzleState.contracts;\n            const ids = Marketplace.getShopIDsByOwner[this.state.shopKeys];\n\n            try {\n                if(!Boolean(ids && ids.value)) {\n                    return (\n                        <div>Loading...</div>\n                    )\n                } else {\n                       \n                    return (\n                            <Row>\n                                <Col>\n                                    <Row>\n                                        <Col>\n                                            <ListShops \n                                                drizzle={this.props.drizzle} \n                                                drizzleState={this.props.drizzleState} \n                                                ids={ids} \n                                            />\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <AddShop \n                                                drizzle={this.props.drizzle} \n                                                drizzleState={this.props.drizzleState} \n                                                callback={this.ManageShopsCallback}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                    )\n                }\n\n            } catch (err) {\n                console.log(err);\n            }\n        }         \n    }\n}\n\n ","import React, { Component } from 'react';\nimport { Button, Table } from 'reactstrap';\n\nexport default class ListProducts extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { \n            itemKeys: []\n        };\n    }\n    \n    componentDidMount() {\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n\n        let items = [];\n        \n        this.props.ids.value.forEach((itemID)=>{\n            items.push(contract.methods[\"items\"].cacheCall(itemID, {from: account}));\n        }); \n\n        this.setState({itemKeys: items});\n    }\n\n    handleShip(sku) {\n        this.ship(sku);\n    };\n\n    ship(_sku) {\n        const sku = parseInt(_sku);\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"shipItem\"].cacheSend(sku, {\n          from: drizzleState.accounts[0]\n        });\n    \n        // save the `stackId` for later reference\n        this.setState({ stackId });\n        this.setState({txAlert: true});\n    };\n\n    handleArchive(sku) {\n        this.archive(sku);\n    };\n\n    archive(_sku) {\n        const sku = parseInt(_sku);\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"archiveItem\"].cacheSend(sku, {\n          from: drizzleState.accounts[0]\n        });\n    \n        // save the `stackId` for later reference\n        this.setState({ stackId });\n        this.setState({txAlert: true})\n    };\n\n    render() {\n        //console.log('ListProducts');\n        const { Marketplace } = this.props.drizzleState.contracts;\n        \n        if(this.state.itemKeys === null){\n            return (\n                <div>\n                    Loading...\n                </div>\n            )\n        } else {\n            if(!this.state.itemKeys.length){\n                return (\n                    <div>\n                        No item keys!\n                    </div>\n                )\n            } else {\n\n                let items = [];\n                this.state.itemKeys.forEach((key, index)=>{\n                    let item= Marketplace.items[key];       \n                    items.push(item && item.value);\n                });\n    \n                try{\n            \n                    if(!Boolean(items[items.length-1])){\n                        return (\n                            <div>Loading...</div>\n                        )\n                    } else {\n                        const imgBaseUrl = 'https://ipfs.io/ipfs/';\n                        \n                        const itemList = items.map((item, index) =>\n                            <tr key={index}>\n                                <td>{item.shopID}</td>\n                                <td>{item.name}</td>\n                                <td>{item.sku}</td>\n                                <td>{item.description}</td>\n                                <td>\n                                    <a href={ imgBaseUrl + item.ipfsImageHash} rel=\"noopener norefferrer\" target=\"_blank\"  >\n                                        {(item.ipfsImageHash !== '') ?\n                                            <img \n                                                height=\"25\" \n                                                width=\"25\" \n                                                alt=\"product img\"\n                                                src={imgBaseUrl + item.ipfsImageHash} \n                                            />\n                                        : ''}\n                                    </a>\n                                </td>\n                                <td>{this.props.drizzle.web3.utils.fromWei(item.price,'finney')}</td>\n                                <td>{item.buyer}</td>\n                                <td>{item.state}</td>\n                                { item.state === '0' ? (\n                                        <td><Button disabled>Stocked</Button></td>\n                                    ) :\n                                        item.state === '1' ? (\n                                            <td><Button onClick={this.handleShip.bind(this,item.sku)}>Ship</Button></td>\n                                    ) : (\n                                        item.state === '2' ? (\n                                            <td><Button disabled>Shipped</Button></td>    \n                                    ) : (\n                                        item.state === '3' ? (\n                                            <td><Button onClick={this.handleArchive.bind(this,item.sku)}>Archive</Button></td>\n                                    ) : \n                                         <td><Button disabled>Archived</Button></td>\n                                    ) \n                                )}\n                                \n                            </tr>\n                        );\n            \n                        return (\n                            <div>\n                                <h3>My Products</h3>\n                                <Table size=\"sm\" striped responsive>\n                                    <thead><tr>\n                                        <th>ShopID</th>\n                                        <th>Name</th>\n                                        <th>SKU</th>\n                                        <th>Description</th>\n                                        <th>Image</th>\n                                        <th>Price (finney)</th>\n                                        <th>Buyer</th>\n                                        <th>State</th>\n                                        <th>Action</th>\n                                    </tr></thead>\n                                    <tbody>{itemList}</tbody>\n                                </Table>\n                            </div>\n                        );\n                    }    \n\n                } catch(err){\n                    console.log(err);\n                }\n            }\n        }\n    }\n}","import React, { Component } from 'react';\nimport {Row, Col} from 'reactstrap';\nimport AddProduct from './AddProduct';\nimport ListProducts from './ListProducts';\n\nexport default class ManageProducts extends Component{\n    constructor(props){\n        super(props);\n        this.state = { \n            itemsKey: null\n        };\n    }\n\n    componentDidMount() {\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n\n        const itemsKey = contract.methods[\"getItemsBySeller\"].cacheCall(account, {from: account});\n\n        this.setState({ itemsKey });\n    }\n    \n    render() {\n        //console.log(\"ManageProducts\");\n\n        if(this.state.itemsKey === null){\n            return (\n                <div>Loading items key...</div>\n            )\n        \n        } else {\n            const { Marketplace } = this.props.drizzleState.contracts;\n            const ids = Marketplace.getItemsBySeller[this.state.itemsKey];\n\n            try {\n                if(!Boolean(ids && ids.value)) {\n                    return (\n                        <div>Loading...</div>\n                    )\n                } else {\n                    //console.log(ids);\n                    return (\n                            <Row>\n                                <Col>\n                                    <Row>\n                                        <Col>\n                                            <ListProducts \n                                                drizzle={this.props.drizzle} \n                                                drizzleState={this.props.drizzleState} \n                                                ids={ids} \n                                            />\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <AddProduct \n                                                drizzle={this.props.drizzle} \n                                                drizzleState={this.props.drizzleState} \n                                            />\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                    )\n                }\n\n            } catch (err) {\n                console.log(err);\n            }\n        }         \n    }\n}","import React, { Component } from 'react';\nimport ManageShops from \"./ManageShops\";\nimport ManageProducts from \"./ManageProducts\";\nimport { Row, Col } from 'reactstrap';\n\nexport default class Administration extends Component{\n    constructor(props){\n        super(props);\n        \n        this.state = { \n            isShopOwner: null\n        };\n\n    }\n\n    componentDidMount() {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n    \n        // let drizzle know we want to watch the `get` method\n        const isShopOwner = contract.methods[\"isAShopOwner\"].cacheCall({from: account});\n    \n        // save the `dataKey` to local component state for later reference\n        this.setState({ isShopOwner });\n       \n    }\n    \n    render() {\n        // get the contract state from drizzleState\n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        // using the saved `dataKey`, get the variable we're interested in\n        const ShopOwner = Marketplace.isAShopOwner[this.state.isShopOwner];\n\n        if(Boolean(ShopOwner && ShopOwner.value)) {\n               \n        return(\n            <Row id=\"shop_management\">\n                <Col>\n \n                    <Row>\n                        <Col>\n                            <ManageShops drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} />\n                            <hr />\n                        </Col>\n                    </Row>\n                    \n                    <Row>\n                        <Col>\n                            <ManageProducts drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} />\n                            <hr />\n                        </Col>\n                    </Row>\n           \n                </Col>\n            </Row>\n        )\n        } else {\n            return(\n                <div id=\"shop_management\">\n                    <Row>\n                        <Col><p>You must have shopowner privileges to access this page. Return to <a href=\"/\">the Marketplace</a></p></Col>\n                    </Row>\n                </div>\n            )\n        }\n\n    }\n}","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Input, Label, Alert } from 'reactstrap';\n\nexport default class AddAdmins extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { stackId: null, txAlert: false };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onDismiss = this.onDismiss.bind(this);\n    }\n\n    onDismiss(){\n        this.setState({txAlert: false});\n    }\n    \n    handleSubmit(e) {\n        e.preventDefault(); \n        if(e.target.admin_address.value === '') return;\n        this.setValue(e.target.admin_address.value);\n        e.target.admin_address.value = '';\n    };\n    \n    setValue(address) {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"addAdmin\"].cacheSend(address, {\n          from: drizzleState.accounts[0]\n        });\n    \n        // save the `stackId` for later reference\n        this.setState({ stackId });\n        this.setState({txAlert: true});\n    };\n\n    getTxStatus = () => {\n        // get the transaction states from the drizzle state\n        const { transactions, transactionStack } = this.props.drizzleState;\n    \n        // get the transaction hash using our saved `stackId`\n        const txHash = transactionStack[this.state.stackId];\n    \n        // if transaction hash does not exist, don't display anything\n        if (!txHash) {\n\n            return 'Connecting...';\n        }\n\n        // otherwise, return the transaction status\n        return `Transaction status: ${transactions[txHash].status}`;\n      };\n\n    \n\n    render() {\n        return(\n            <div>\n                <h3>Add New Admin</h3>\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label htmlFor=\"address\">Enter Account Address</Label>\n                        <Input id=\"new_amdin_address\" name=\"admin_address\" type=\"text\" placeholder=\"0x000000000000000000000000000000000000000000\" />\n                    </FormGroup>\n                    \n                    <FormGroup>\n                        <Button>Add</Button>\n                    </FormGroup>\n                    \n                    <FormGroup>\n                        <Alert color=\"info\" isOpen={this.state.txAlert} toggle={this.onDismiss}>{this.getTxStatus()}</Alert>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Button, Table } from 'reactstrap';\n\nexport default class ListAdmins extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { admins: null };\n\n        this.removeAdmin = this.removeAdmin.bind(this);\n    }\n    \n    componentDidMount() {\n    \n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n    \n        // let drizzle know we want to watch the `get` method\n        const admins = contract.methods[\"listAdmins\"].cacheCall({from: account});\n    \n        // save the `dataKey` to local component state for later reference\n        this.setState({ admins });\n    }\n\n    removeAdmin(index) {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        contract.methods[\"removeAdmin\"].cacheSend(index, {\n          from: drizzleState.accounts[0]\n        });\n    \n    }\n\n    render() {\n\n        // get the contract state from drizzleState\n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        // using the saved `dataKey`, get the variable we're interested in\n        const admns = Marketplace.listAdmins[this.state.admins];\n\n        const l = (admns && admns.value);\n        try{\n           \n            if(l.length !== undefined){\n\n                const adminList = l.map((admin, index) =>\n                    <tr key={index}><td>{admin}</td><td>\n                        {\n                           (index < 1) ? <Button type=\"button\" disabled>Owner</Button>\n                                        : <Button type=\"button\" onClick={this.removeAdmin.bind(this, index)}>Remove</Button>\n                        }   \n                    </td></tr>\n                )\n            \n                return (\n                    <div>\n                        <h3>Admin Accounts</h3>\n                        <Table size=\"sm\" striped responsive>\n                            <thead><tr><th>Account Address</th><th>Action</th></tr></thead>\n                            <tbody>{adminList}</tbody>\n                        </Table>\n                    </div>\n                )\n            }    \n\n        } catch(err){\n           \n        }\n\n        return(\n            <div><p>No admins.</p></div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport AddAdmins from './AddAdmins';\nimport ListAdmins from './ListAdmins';\n\nexport default class ManageAdmins extends Component{\n    constructor(props){\n        super(props);\n        this.state = { isAdmin: null, isShopOwner: null };\n    }\n    \n    render() {\n\n        return(\n            <Row>\n                <Col>\n                    <Row>\n                        <Col><ListAdmins drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} /></Col>\n                    </Row>\n\n                    <Row>\n                        <Col><AddAdmins drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} /></Col>\n                    </Row>\n                    <hr />\n                </Col>\n            </Row>\n        )\n    }\n}\n \n","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Input, Label, Alert } from 'reactstrap';\n\nclass AddShopOwners extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { stackId: null, txAlert: false };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onDismiss = this.onDismiss.bind(this);\n    }\n\n    onDismiss(){\n        this.setState({txAlert: false});\n    }\n    \n    handleSubmit(e) {\n        e.preventDefault(); \n        if(e.target.shopowner_address.value === '') return;\n        this.setValue(e.target.shopowner_address.value);\n        e.target.shopowner_address.value = '';\n    };\n    \n    setValue(address) {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"addShopOwner\"].cacheSend(address, {\n          from: drizzleState.accounts[0]\n        });\n    \n        // save the `stackId` for later reference\n        this.setState({ stackId });\n        this.setState({txAlert: true});\n    };\n    \n    getTxStatus = () => {\n        // get the transaction states from the drizzle state\n        const { transactions, transactionStack } = this.props.drizzleState;\n    \n        // get the transaction hash using our saved `stackId`\n        const txHash = transactionStack[this.state.stackId];\n    \n        // if transaction hash does not exist, don't display anything\n        if (!txHash) return \"Connecting...\";\n    \n        // otherwise, return the transaction status\n        return `Transaction status: ${transactions[txHash].status}`;\n      };\n\n    render() {\n        return(\n            <div>\n                <h3>Add New Shop Owner</h3>\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label htmlFor=\"address\">Enter Account Address</Label>\n                        <Input id=\"new_shopowner_address\" name=\"shopowner_address\" type=\"text\" placeholder=\"0x000000000000000000000000000000000000000000\" />\n                    </FormGroup>\n                    \n                    <FormGroup>\n                        <Button>Add</Button>\n                    </FormGroup>\n                    \n                    <FormGroup>\n                        <Alert color=\"info\" isOpen={this.state.txAlert} toggle={this.onDismiss}>{this.getTxStatus()}</Alert>\n                    </FormGroup>\n                </Form>\n            </div>            \n        )\n    }\n}\n\nexport default AddShopOwners;","import React, { Component } from 'react';\nimport { Button, Table } from 'reactstrap';\n\nexport default class ListShopOwners extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { shopowners: null };\n\n        this.removeAdmin = this.removeAdmin.bind(this);\n    }\n    \n    componentDidMount() {\n    \n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n    \n        // let drizzle know we want to watch the `get` method\n        const shopowners = contract.methods[\"listShopOwners\"].cacheCall({from: account});\n    \n        // save the `dataKey` to local component state for later reference\n        this.setState({ shopowners });\n    }\n\n    removeAdmin(index) {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n    \n        contract.methods[\"removeShopOwner\"].cacheSend(index, {\n          from: drizzleState.accounts[0]\n        });\n    \n    }\n\n    render() {\n\n        // get the contract state from drizzleState\n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        // using the saved `dataKey`, get the variable we're interested in\n        const shopownrs = Marketplace.listShopOwners[this.state.shopowners];\n\n        const l = (shopownrs && shopownrs.value);\n        try{\n           \n            if(l.length !== undefined){\n\n                const ownerList = l.map((owner, index) =>\n                    <tr key={index}><td>{owner}</td><td>\n                        <Button type=\"button\" onClick={this.removeAdmin.bind(this, index)}>Remove</Button>\n                    </td></tr>\n                )\n            \n                return (\n                    <div>\n                        <h3>Shop Owner Accounts</h3>\n                        <Table size=\"sm\" striped responsive>\n                            <thead><tr><th>Account Address</th><th>Action</th></tr></thead>\n                            <tbody>{ownerList}</tbody>\n                        </Table>\n                    </div>\n                )\n            }    \n\n        } catch(err){\n           \n        }\n\n        return(\n            <div><p>No Shop Owners.</p></div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport AddShopOwners from './AddShopOwners';\nimport ListShopOwners from './ListShopOwners';\n\nexport default class ManageShopOwners extends Component{\n    render() {\n        return(\n            <Row>\n                <Col>\n                    <Row>\n                        <Col><ListShopOwners drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} /></Col>\n                    </Row>\n\n                    <Row>\n                        <Col><AddShopOwners drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} /></Col>\n                    </Row>\n                    <hr />\n                </Col>\n            </Row>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Button, FormGroup, Alert } from 'reactstrap';\n\nclass DangerZone extends Component{\n    constructor(props){\n        super(props);\n        this.state = { circuitState: null, owner: null}; \n\n        this.toggleCircuit = this.toggleCircuit.bind(this);\n        this.destroyContract = this.destroyContract.bind(this);\n    }\n\n    componentDidMount() {\n        const { drizzle, drizzleState } = this.props; \n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n    \n        // let drizzle know we want to watch these methods\n        const circuitState = contract.methods[\"getCircuitState\"].cacheCall();\n        const owner = contract.methods[\"isTheOwner\"].cacheCall({from:account});\n    \n        // save the `dataKey` to local component state for later reference\n        this.setState({ circuitState, owner });\n      }\n\n    toggleCircuit(event){\n        const { drizzle } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        contract.methods[\"toggleCircuitBreaker\"].cacheSend();\n    }\n\n    destroyContract(event){\n        const { drizzle } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        contract.methods[\"destroy\"].cacheSend();\n    }\n\n    render() {\n         // get the contract state from drizzleState\n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        // using the saved `dataKey`, get the variable we're interested in\n        const circuit = Marketplace.getCircuitState[this.state.circuitState];\n\n        const circuitstate = (Boolean(circuit && circuit.value))?<Alert color=\"danger\">Circuit is Off</Alert>:<Alert color=\"success\">Circuit is On</Alert>\n\n        const ownr = Marketplace.isTheOwner[this.state.owner];\n\n        const isOwner=(ownr && ownr.value);\n\n        var destroyBttn = null;\n\n        if(isOwner && (Boolean(circuit && circuit.value)===true)){\n            destroyBttn = <Button id=\"destroy\" type=\"submit\" onClick={this.destroyContract} color=\"danger\">Destroy Contract</Button>\n        } else {\n            destroyBttn = <Button id=\"destroy\" type=\"submit\" onClick={this.destroyContract} color=\"danger\" disabled>Destroy Contract</Button>\n        }\n\n        return(\n            <div>\n                <h3>Security &amp; Life Cycle</h3>\n                <FormGroup>\n                    <Button type=\"submit\" onClick={this.toggleCircuit} color=\"danger\">Toggle Circuit Breaker</Button>\n                </FormGroup>\n                <FormGroup>\n                    {circuitstate}\n                </FormGroup>\n                <FormGroup>\n                    {destroyBttn}\n                </FormGroup>\n            </div>\n        )\n    }\n}\n\nexport default DangerZone;","import React, { Component } from 'react';\nimport ManageAdmins from './ManageAdmins';\nimport ManageShopOwners from './ManageShopOwners';\nimport DangerZone from './DangerZone'\nimport { Row, Col } from 'reactstrap';\n\nexport default class Administration extends Component{\n    constructor(props){\n        super(props);\n        this.state = { isAdmin: null };\n    }\n\n    componentDidMount() {\n\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n    \n        // let drizzle know we want to watch the `get` method\n        const isAdmin = contract.methods[\"isAnAdmin\"].cacheCall({from: account});\n    \n        // save the `dataKey` to local component state for later reference\n        this.setState({ isAdmin });\n    }\n    \n    render() {\n        // get the contract state from drizzleState\n        const { Marketplace } = this.props.drizzleState.contracts;\n\n        // using the saved `dataKey`, get the variable we're interested in\n        const Admin = Marketplace.isAnAdmin[this.state.isAdmin];\n\n        if(Boolean(Admin && Admin.value)) {\n               \n        return(\n            <Row id=\"administration\">\n                <Col>\n \n                    <Row>\n                        <Col>\n                            <ManageAdmins drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} />\n                        </Col>\n                    </Row>\n                    \n                    <Row>\n                        <Col>\n                            <ManageShopOwners drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} />\n                        </Col>\n                    </Row>\n           \n                    <Row>\n                        <Col>\n                            <DangerZone drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} />\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        )\n        } else {\n            return(\n                <div id=\"administration\">\n                    <Row>\n                        <Col><p>You must have administrative privileges to access this page. Return to <a href=\"/\">the Marketplace</a></p></Col>\n                    </Row>\n                </div>\n            )\n        }\n\n    }\n}","import React, { Component } from 'react';\n\nexport default class NotFound extends Component{\n\n    render() {\n \n        return(\n            <h2>404</h2>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Switch, Route } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\n// UI componenets\nimport Unav from \"./components/page/Unav\";\nimport EventStream from \"./components/page/EventStream\";\n\nimport MarketplaceListContainer from \"./components/marketplace/MarketplaceListContainer\";\nimport ShopListContainer from \"./components/marketplace/ShopListContainer\";\nimport ShopManagement from \"./components/shop/ShopManagement\";\nimport Administration from \"./components/admin/Administration\";\nimport NotFound from \"./components/page/NotFound\";\n\n\nexport default class App extends Component {\n  state = { \n    loading: true, \n    drizzleState: null,\n  };\n\n  componentDidMount() {\n      const { drizzle } = this.props;\n  \n      // subscribe to changes in the store\n      this.unsubscribe = drizzle.store.subscribe(() => {\n  \n        // every time the store updates, grab the state from drizzle\n        const drizzleState = drizzle.store.getState();\n  \n        // check to see if it's ready, if so, update local component state\n        if (drizzleState.drizzleStatus.initialized) {\n\n          this.setState({ loading: false, drizzleState });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    if (this.state.loading) {\n      return (\n      <Container>\n        <Row>\n          <Col>\n            Loading Drizzle...\n          </Col>\n        </Row>\n      </Container>\n    )\n  } else {\n\n    return (\n        \n        <Container>\n          \n          <Unav drizzle={this.props.drizzle} drizzleState={this.state.drizzleState} />\n          <EventStream drizzle={this.props.drizzle} drizzleState={this.state.drizzleState}/>\n\n          <Switch>\n            <Route exact path=\"/\" render={(props) => <MarketplaceListContainer {...props} drizzle={this.props.drizzle} drizzleState={this.state.drizzleState} /> } />\n            <Route path=\"/manage-shops\" render={(props) => <ShopManagement {...props} drizzle={this.props.drizzle} drizzleState={this.state.drizzleState} /> } />\n            <Route path=\"/admin\" render={(props) => <Administration {...props} drizzle={this.props.drizzle} drizzleState={this.state.drizzleState} /> } /> \n            <Route path=\"/shops/:id\" render={(props) => <ShopListContainer {...props} drizzle={this.props.drizzle} drizzleState={this.state.drizzleState} /> } /> \n            <Route component={NotFound} />\n          </Switch>\n         \n        </Container>\n      \n    );\n    }\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// 1. Import drizzle, drizzle-react, and your contract artifacts.\nimport { Drizzle, generateStore } from \"drizzle\";\nimport Marketplace from \"./contracts/Marketplace.json\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// 2. Setup the drizzle instance.\nconst options = { contracts: [Marketplace] };\nconst drizzleStore = generateStore(options);\nconst drizzle = new Drizzle(options, drizzleStore);\n\n\nReactDOM.render(\n    <Router>\n        <App drizzle={drizzle}/>\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Input, Label, Alert } from 'reactstrap';\n\nexport default class AddProduct extends Component{\n\n    constructor(props){\n        super(props);\n       \n        this.state = { \n            stackId: null, \n            txAlert: false,\n            buffer:''\n          };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onDismiss = this.onDismiss.bind(this);\n    }\n\n    //Take file input from user\n    captureFile =(event) => {\n        event.stopPropagation()\n        event.preventDefault()\n        const file = event.target.files[0]\n        if(file == null)\n            return;\n        let reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = () => this.convertToBuffer(reader)\n    };\n\n    //Convert the file to buffer to store on IPFS\n    convertToBuffer = async(reader) => {\n        //file is converted to a buffer for upload to IPFS\n        const buffer = await Buffer.from(reader.result);\n        //set this buffer-using es6 syntax\n        this.setState({buffer});\n    };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        const shopID = parseInt(e.target.shopID.value);\n        const name = e.target.prod_name.value;\n        const description = e.target.prod_desc.value;\n        const price = e.target.prod_price.value;\n\n        if(shopID === '' || name === '' || price === '') return;\n        \n        if(this.state.buffer !== ''){\n            //save document to IPFS, return its hash#\n            const IPFS = require('ipfs-http-client');\n            const ipfs = new IPFS('ipfs.infura.io', '5001', { protocol: 'https' });\n\n            await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n\n                if(err){\n                    //console.log(err);\n                    return;\n                }\n\n                const hash = ipfsHash[0].hash;\n                \n                this.setValues(shopID, name, description, price, hash );\n            });\n        } else {\n            this.setValues(shopID, name, description, price, '' );\n        }\n        \n      };\n\n    onDismiss(){\n        this.setState({txAlert: false});\n    }\n    \n    setValues(shopID, name, desc, price, hash) {\n        //console.log(\"in setValues\");\n        const { drizzle, drizzleState } = this.props;\n        const contract = drizzle.contracts.Marketplace;\n        const account = drizzleState.accounts[0];\n\n        const _price = drizzle.web3.utils.toWei(price, 'finney'); \n\n        // let drizzle know we want to call the `set` method with `value`\n        const stackId = contract.methods[\"addItemToShop\"].cacheSend(\n            \n                shopID, \n                name, \n                desc,\n                hash,\n                _price,\n                {from: account}\n        );\n\n        this.setState({ stackId });\n        this.setState({txAlert: true});      \n    };\n    \n    getTxStatus(){\n        //console.log(\"in getTxStatus\");\n        // get the transaction states from the drizzle state\n        const { transactions, transactionStack } = this.props.drizzleState;\n    \n        // get the transaction hash using our saved `stackId`\n        const txHash = transactionStack[this.state.stackId];\n    \n        // if transaction hash does not exist, don't display anything\n        if (!txHash) {\n\n            return 'Connecting...';\n        }\n\n        // otherwise, return the transaction status\n        return `Transaction status: ${transactions[txHash].status}`;\n      };\n\n    render() {\n        //console.log('AddProducts');\n        return(\n        \n            <div>\n                <h3>Add New Product</h3>\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label htmlFor=\"shopID\">Shop ID</Label>\n                        <Input id=\"shopID\" name=\"shopID\" type=\"text\" placeholder=\"0\" />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor=\"prod_name\">Name</Label>\n                        <Input id=\"prod_name\" name=\"prod_name\" type=\"text\" placeholder=\"My New Product\" />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor=\"prod_desc\">Description</Label>\n                        <Input id=\"prod_desc\" name=\"prod_desc\" type=\"text\" placeholder=\"This product is...\" />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor=\"prod_price\">Price (finney)</Label>\n                        <Input id=\"prod_price\" name=\"prod_price\" type=\"text\" placeholder=\"3\" />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor=\"prod_image\">Product Image</Label>\n                        <Input id=\"prod_image\" name=\"prod_image\" type=\"file\" onChange = {this.captureFile} />\n                    </FormGroup>\n                    \n                    <FormGroup>\n                        <Button>Create</Button>\n                    </FormGroup>\n                    \n                    <FormGroup>\n                        <Alert color=\"info\" isOpen={this.state.txAlert} toggle={this.onDismiss}>{this.getTxStatus()}</Alert>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}"],"sourceRoot":""}